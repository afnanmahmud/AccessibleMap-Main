{"ast":null,"code":"var _jsxFileName = \"/Users/kenn/Documents/GitHub/AccessibleMapBackup/src/components/AccessibleMap.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport OSM from 'ol/source/OSM';\nimport XYZ from 'ol/source/XYZ';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport LineString from 'ol/geom/LineString';\nimport { fromLonLat } from 'ol/proj';\nimport { Icon, Style, Stroke } from 'ol/style';\nimport { defaults as defaultControls } from 'ol/control';\nimport Openrouteservice from 'openrouteservice-js';\nimport MapSearch from './MapSearch/MapSearch';\nimport 'ol/ol.css';\nimport './AccessibleMap.css';\n\n// OpenRouteService API configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst orsDirections = new Openrouteservice.Directions({\n  api_key: '5b3ce3597851110001cf6248a1d686e75cef4e86a9782464ccdb71cf'\n});\n\n// Types\n\n// Constants\nconst INITIAL_CENTER = fromLonLat([-84.5831, 34.0390]);\n\n// Location data from JSON file combined\nconst campusLocations = [{\n  name: \"Carmichael Student Center\",\n  coordinates: [-84.5831447839737, 34.038533480073355]\n}, {\n  name: \"Carmichael Student Center Entrance\",\n  coordinates: [-84.58283364772798, 34.038660170620055]\n}, {\n  name: \"Academic Learning Center\",\n  coordinates: [-84.58317697048189, 34.03931806936354]\n}, {\n  name: \"Academic Learning Center Entrance\",\n  coordinates: [-84.58298921585084, 34.03978259614599]\n}, {\n  name: \"English Building\",\n  coordinates: [-84.58414524793626, 34.03942475516541]\n}, {\n  name: \"English Building South\",\n  coordinates: [-84.5841532945633, 34.03910025210137]\n}, {\n  name: \"English Building North\",\n  coordinates: [-84.58402454853059, 34.03979815441523]\n}, {\n  name: \"University Hall\",\n  coordinates: [-84.58437055349351, 34.038938000103784]\n}, {\n  name: \"Willingham Hall\",\n  coordinates: [-84.58483189344408, 34.038973562212]\n}, {\n  name: \"Social Sciences\",\n  coordinates: [-84.58521813154222, 34.03870240076022]\n}, {\n  name: \"Technology Services\",\n  coordinates: [-84.58511178527453, 34.04324444304241]\n}, {\n  name: \"Jolley Lodge\",\n  coordinates: [-84.58503997779815, 34.041975382594565]\n}, {\n  name: \"Bailey Performance Center\",\n  coordinates: [-84.58388467029071, 34.04104538235975]\n}, {\n  name: \"Zuckerman Museum\",\n  coordinates: [-84.58332319433181, 34.041127569948884]\n}, {\n  name: \"Prillaman Health Sciences\",\n  coordinates: [-84.5823230947359, 34.04126007515278]\n}, {\n  name: \"Prillaman Health Sciences East\",\n  coordinates: [-84.58227837728104, 34.04040804794117]\n}, {\n  name: \"Prillaman Health Sciences West\",\n  coordinates: [-84.58162052602621, 34.04049249904415]\n}, {\n  name: \"Central Parking Deck\",\n  coordinates: [-84.58155510939581, 34.04091628989932]\n}, {\n  name: \"Visual Arts\",\n  coordinates: [-84.58495900426912, 34.04014013820758]\n}, {\n  name: \"Wilson Annex\",\n  coordinates: [-84.58407716154898, 34.040382041842314]\n}, {\n  name: \"Wilson Building\",\n  coordinates: [-84.5831444233547, 34.04021534710124]\n}, {\n  name: \"Music Building\",\n  coordinates: [-84.58287930990906, 34.040181974276315]\n}, {\n  name: \"The Commons\",\n  coordinates: [-84.5822049725835, 34.040112254887596]\n}, {\n  name: \"Burruss Building\",\n  coordinates: [-84.58182548615811, 34.03916307618097]\n}, {\n  name: \"Burruss Building East\",\n  coordinates: [-84.58151844214942, 34.039334634541554]\n}, {\n  name: \"Bagwell Education Building\",\n  coordinates: [-84.58087532494412, 34.0396379119677]\n}, {\n  name: \"Bagwell Education Building South\",\n  coordinates: [-84.5809418434928, 34.039037425081695]\n}, {\n  name: \"Kennesaw Hall\",\n  coordinates: [-84.580944525696, 34.03889684364226]\n}, {\n  name: \"Kennesaw Hall East\",\n  coordinates: [-84.5807963755791, 34.037958423913985]\n}, {\n  name: \"Kennesaw Hall South\",\n  coordinates: [-84.58038669152127, 34.03813234820042]\n}, {\n  name: \"Convocation Center\",\n  coordinates: [-84.5804216302843, 34.03739857647659]\n}, {\n  name: \"Siegel Student Recreation Center\",\n  coordinates: [-84.58134592872163, 34.03685306796862]\n}, {\n  name: \"Siegel Student Recreation East\",\n  coordinates: [-84.58239021303122, 34.03685051220012]\n}, {\n  name: \"Siegel Student Recreation North\",\n  coordinates: [-84.58220111729591, 34.03752287232788]\n}, {\n  name: \"East Parking Deck\",\n  coordinates: [-84.58115296368257, 34.0366216129326]\n}, {\n  name: \"University Bookstore\",\n  coordinates: [-84.5831169079928, 34.03785497707045]\n}, {\n  name: \"Sturgis Library\",\n  coordinates: [-84.58373969823, 34.03817439372666]\n}, {\n  name: \"Wilder Communications Center\",\n  coordinates: [-84.52081934524365, 33.93455660617953]\n}, {\n  name: \"Civil Engineering Soils Lab\",\n  coordinates: [-84.52036756689206, 33.93540362312106]\n}\n// Additional locations would continue here\n];\nconst AccessibleMap = ({\n  className\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const vectorSourceRef = useRef(new VectorSource());\n  const userMarkerRef = useRef(new Feature());\n  const [viewMode, setViewMode] = useState('standard');\n  const [startLocation, setStartLocation] = useState('');\n  const [endLocation, setEndLocation] = useState('');\n  const [routeMode, setRouteMode] = useState('walking');\n  const [userLocation, setUserLocation] = useState(null);\n  const [turnByTurnDirections, setTurnByTurnDirections] = useState([]);\n  const [isFlyoutOpen, setIsFlyoutOpen] = useState(false);\n  const [routeOptions, setRouteOptions] = useState([]);\n  const [selectedRouteId, setSelectedRouteId] = useState(null);\n\n  // Place accessibility markers on the map\n  const placeMarkers = useCallback(() => {\n    campusLocations.forEach(location => {\n      const coords = fromLonLat(location.coordinates);\n      const marker = new Feature(new Point(coords));\n      marker.setStyle(new Style({\n        image: new Icon({\n          src: 'https://cdn2.iconfinder.com/data/icons/wsd-map-markers-2/512/wsd_markers_97-512.png',\n          scale: 0.04,\n          anchor: [0.5, 1]\n        })\n      }));\n      vectorSourceRef.current.addFeature(marker);\n    });\n  }, []);\n\n  // Start tracking user location\n  const startTracking = useCallback(() => {\n    if (!navigator.geolocation) {\n      console.error('Geolocation is not supported by this browser.');\n      return;\n    }\n    const watchId = navigator.geolocation.watchPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      const lonLat = [longitude, latitude];\n      setUserLocation(lonLat);\n      const coords = fromLonLat(lonLat);\n\n      // Update marker position\n      userMarkerRef.current.setGeometry(new Point(coords));\n\n      // Ensure the marker is added only once\n      if (!vectorSourceRef.current.hasFeature(userMarkerRef.current)) {\n        userMarkerRef.current.setStyle(new Style({\n          image: new Icon({\n            src: 'https://cdn-icons-png.flaticon.com/128/884/884094.png',\n            scale: 0.2\n          })\n        }));\n        vectorSourceRef.current.addFeature(userMarkerRef.current);\n      }\n\n      // Follow user location\n      if (mapInstance.current) {\n        mapInstance.current.getView().setCenter(coords);\n      }\n    }, error => {\n      console.error('Error getting location:', error);\n    }, {\n      enableHighAccuracy: true,\n      maximumAge: 0,\n      timeout: 5000\n    });\n    return () => navigator.geolocation.clearWatch(watchId);\n  }, []);\n\n  // Initialize the map\n  useEffect(() => {\n    if (!mapRef.current) return;\n    const vectorLayer = new VectorLayer({\n      source: vectorSourceRef.current\n    });\n    const standardLayer = new TileLayer({\n      source: new OSM(),\n      visible: true\n    });\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        maxZoom: 19\n      }),\n      visible: false\n    });\n    mapInstance.current = new Map({\n      target: mapRef.current,\n      layers: [standardLayer, satelliteLayer, vectorLayer],\n      view: new View({\n        center: INITIAL_CENTER,\n        zoom: 17,\n        maxZoom: 19\n      }),\n      controls: defaultControls()\n    });\n    placeMarkers();\n    startTracking();\n  });\n\n  // Toggle between standard and satellite map views\n  const toggleMapView = useCallback(() => {\n    if (!mapInstance.current) return;\n    const layers = mapInstance.current.getLayers().getArray();\n    const standardLayer = layers[0];\n    const satelliteLayer = layers[1];\n    if (viewMode === 'standard') {\n      standardLayer.setVisible(false);\n      satelliteLayer.setVisible(true);\n      setViewMode('satellite');\n    } else {\n      standardLayer.setVisible(true);\n      satelliteLayer.setVisible(false);\n      setViewMode('standard');\n    }\n  }, [viewMode]);\n\n  // Toggle between walking and wheelchair route modes\n  const toggleRouteMode = useCallback(() => {\n    setRouteMode(routeMode === 'walking' ? 'wheelchair' : 'walking');\n  }, [routeMode]);\n\n  // Find location coordinates by name\n  const findLocationByName = useCallback(query => {\n    if (!query) return null;\n    const lowerQuery = query.toLowerCase();\n\n    // Try exact match first\n    const exactMatch = campusLocations.find(loc => loc.name.toLowerCase() === lowerQuery);\n    if (exactMatch) return exactMatch.coordinates;\n\n    // Try partial match\n    const partialMatch = campusLocations.find(loc => loc.name.toLowerCase().includes(lowerQuery));\n    return partialMatch ? partialMatch.coordinates : null;\n  }, []);\n\n  // Clear previous routes from the map\n  const clearRoutes = useCallback(() => {\n    const features = vectorSourceRef.current.getFeatures();\n    features.forEach(feature => {\n      // Remove only route lines and previous start/end markers\n      if (feature.getGeometry() instanceof LineString || feature.get('type') === 'marker') {\n        vectorSourceRef.current.removeFeature(feature);\n      }\n    });\n    setTurnByTurnDirections([]);\n  }, []);\n\n  // Calculate route options when start and end locations are set\n  useEffect(() => {\n    if (!startLocation || !endLocation) {\n      setIsFlyoutOpen(false);\n      setRouteOptions([]);\n      return;\n    }\n    const timer = setTimeout(() => {\n      let startCoords;\n      if (startLocation) {\n        // If user entered a start location, use that\n        startCoords = findLocationByName(startLocation);\n      } else if (userLocation) {\n        // If no start location entered, use current user location\n        startCoords = userLocation;\n      } else {\n        return;\n      }\n      const endCoords = findLocationByName(endLocation);\n      if (!startCoords || !endCoords) {\n        setIsFlyoutOpen(false);\n        setRouteOptions([]);\n        return;\n      }\n\n      // Calculate routes\n      orsDirections.calculate({\n        coordinates: [startCoords, endCoords],\n        profile: routeMode === 'wheelchair' ? 'wheelchair' : 'foot-walking',\n        format: 'geojson',\n        alternative_routes: {\n          target_count: 3,\n          share_factor: 0.6\n        },\n        instructions: true\n      }).then(response => {\n        const routes = response.features.map((feature, index) => ({\n          id: index,\n          summary: `Route ${index + 1}`,\n          distance: feature.properties.summary.distance,\n          duration: feature.properties.summary.duration,\n          coordinates: feature.geometry.coordinates,\n          steps: feature.properties.segments[0].steps\n        }));\n        setRouteOptions(routes);\n        setIsFlyoutOpen(true);\n        setSelectedRouteId(0); // Default to first route\n      }).catch(err => {\n        console.error('Route calculation error:', err);\n        setIsFlyoutOpen(false);\n        setRouteOptions([]);\n      });\n    }, 500); // 500ms debounce\n\n    return () => clearTimeout(timer);\n  }, [startLocation, endLocation, routeMode, findLocationByName, userLocation]);\n\n  // Calculate and display the selected route\n  const calculateRoute = useCallback(() => {\n    if (selectedRouteId === null || !routeOptions.length) {\n      alert('Please select a route to start.');\n      return;\n    }\n    clearRoutes();\n    let startCoords;\n    if (startLocation) {\n      // If user entered a start location, use that\n      startCoords = findLocationByName(startLocation);\n    } else if (userLocation) {\n      // If no start location entered, use current user location\n      startCoords = userLocation;\n    } else {\n      alert('Unable to determine your current location. Please enter a start location.');\n      return;\n    }\n    const endCoords = findLocationByName(endLocation);\n    if (!startCoords || !endCoords) {\n      alert('Please enter valid locations');\n      return;\n    }\n\n    // Convert coordinates to OpenLayers format\n    const startPoint = fromLonLat(startCoords);\n    const endPoint = fromLonLat(endCoords);\n\n    // Create start marker (blue)\n    const startMarker = new Feature(new Point(startPoint));\n    startMarker.setStyle(new Style({\n      image: new Icon({\n        src: 'https://cdn-icons-png.flaticon.com/128/7976/7976202.png',\n        scale: 0.2,\n        anchor: [0.5, 1]\n      })\n    }));\n    startMarker.set('type', 'marker');\n\n    // Create end marker (red)\n    const endMarker = new Feature(new Point(endPoint));\n    endMarker.setStyle(new Style({\n      image: new Icon({\n        src: 'https://cdn-icons-png.flaticon.com/128/9131/9131546.png',\n        scale: 0.2,\n        anchor: [0.5, 1]\n      })\n    }));\n    endMarker.set('type', 'marker');\n\n    // Add markers to the vector source\n    vectorSourceRef.current.addFeature(startMarker);\n    vectorSourceRef.current.addFeature(endMarker);\n\n    // Zoom to fit both markers\n    if (mapInstance.current) {\n      const extent = [Math.min(startPoint[0], endPoint[0]),\n      // Min Longitude\n      Math.min(startPoint[1], endPoint[1]),\n      // Min Latitude\n      Math.max(startPoint[0], endPoint[0]),\n      // Max Longitude\n      Math.max(startPoint[1], endPoint[1]) // Max Latitude\n      ];\n      mapInstance.current.getView().fit(extent, {\n        padding: [50, 50, 50, 50],\n        duration: 1000,\n        maxZoom: 18\n      });\n    }\n\n    // Display the selected route\n    const selectedRoute = routeOptions.find(route => route.id === selectedRouteId);\n    if (selectedRoute) {\n      const routeFeature = new Feature({\n        geometry: new LineString(selectedRoute.coordinates.map(coord => fromLonLat(coord)))\n      });\n      routeFeature.setStyle(new Style({\n        stroke: new Stroke({\n          color: routeMode === 'wheelchair' ? '#4287f5' : '#2563eb',\n          width: 4,\n          lineDash: routeMode === 'wheelchair' ? [5, 5] : undefined\n        })\n      }));\n      vectorSourceRef.current.addFeature(routeFeature);\n\n      // Set turn-by-turn directions\n      if (selectedRoute.steps) {\n        const directions = selectedRoute.steps.map(step => ({\n          type: step.type,\n          instruction: step.instruction,\n          distance: step.distance,\n          duration: step.duration\n        }));\n        setTurnByTurnDirections(directions);\n      }\n    }\n\n    // Close the flyout\n    setIsFlyoutOpen(false);\n  }, [startLocation, endLocation, selectedRouteId, routeOptions, clearRoutes, findLocationByName, userLocation, routeMode]);\n\n  // Handle changing locations\n  const handleStartLocationChange = useCallback(value => {\n    setStartLocation(value);\n  }, []);\n  const handleEndLocationChange = useCallback(value => {\n    setEndLocation(value);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(MapSearch, {\n            onStartChange: handleStartLocationChange,\n            onEndChange: handleEndLocationChange,\n            onSubmit: calculateRoute,\n            locations: campusLocations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"route-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: calculateRoute,\n              className: \"find-route-button\",\n              \"aria-label\": \"Find route\",\n              children: \"GO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: toggleRouteMode,\n              className: `route-mode-toggle ${routeMode === 'wheelchair' ? 'wheelchair-active' : ''}`,\n              \"aria-label\": `Switch to ${routeMode === 'wheelchair' ? 'standard walking' : 'wheelchair'} route`,\n              children: routeMode === 'wheelchair' ? ' 🦽 Wheelchair' : ' 🚶 Walking'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-content\",\n        children: [isFlyoutOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-flyout\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Route Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this), routeOptions.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `route-option ${selectedRouteId === route.id ? 'selected' : ''}`,\n            onClick: () => setSelectedRouteId(route.id),\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: route.summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Distance: \", (route.distance / 1000).toFixed(2), \" km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Duration: \", Math.round(route.duration / 60), \" minutes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 19\n            }, this)]\n          }, route.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: calculateRoute,\n            className: \"select-route-button\",\n            \"aria-label\": \"Select this route\",\n            children: \"Use Selected Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `map-root ${className || ''} ${isFlyoutOpen ? 'shifted' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            ref: mapRef,\n            className: \"map-container\",\n            role: \"application\",\n            \"aria-label\": \"Interactive map displaying user location and navigation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-controls\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: toggleMapView,\n              className: \"map-toggle-button\",\n              children: viewMode === 'standard' ? 'Satellite View' : 'Standard View'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this), turnByTurnDirections.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"turn-by-turn-directions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Turn-by-Turn Directions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: turnByTurnDirections.map((direction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [direction.instruction, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"direction-details\",\n              children: [\"(Distance: \", (direction.distance / 1).toFixed(1), \" m, Duration: \", (direction.duration / 60).toFixed(1), \" min)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 459,\n    columnNumber: 5\n  }, this);\n};\n_s(AccessibleMap, \"AY4xd09G57nMpWu3wbQqhUfp5hI=\");\n_c = AccessibleMap;\nexport default AccessibleMap;\nvar _c;\n$RefreshReg$(_c, \"AccessibleMap\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","Map","View","TileLayer","VectorLayer","VectorSource","OSM","XYZ","Feature","Point","LineString","fromLonLat","Icon","Style","Stroke","defaults","defaultControls","Openrouteservice","MapSearch","jsxDEV","_jsxDEV","orsDirections","Directions","api_key","INITIAL_CENTER","campusLocations","name","coordinates","AccessibleMap","className","_s","mapRef","mapInstance","vectorSourceRef","userMarkerRef","viewMode","setViewMode","startLocation","setStartLocation","endLocation","setEndLocation","routeMode","setRouteMode","userLocation","setUserLocation","turnByTurnDirections","setTurnByTurnDirections","isFlyoutOpen","setIsFlyoutOpen","routeOptions","setRouteOptions","selectedRouteId","setSelectedRouteId","placeMarkers","forEach","location","coords","marker","setStyle","image","src","scale","anchor","current","addFeature","startTracking","navigator","geolocation","console","error","watchId","watchPosition","position","latitude","longitude","lonLat","setGeometry","hasFeature","getView","setCenter","enableHighAccuracy","maximumAge","timeout","clearWatch","vectorLayer","source","standardLayer","visible","satelliteLayer","url","maxZoom","target","layers","view","center","zoom","controls","toggleMapView","getLayers","getArray","setVisible","toggleRouteMode","findLocationByName","query","lowerQuery","toLowerCase","exactMatch","find","loc","partialMatch","includes","clearRoutes","features","getFeatures","feature","getGeometry","get","removeFeature","timer","setTimeout","startCoords","endCoords","calculate","profile","format","alternative_routes","target_count","share_factor","instructions","then","response","routes","map","index","id","summary","distance","properties","duration","geometry","steps","segments","catch","err","clearTimeout","calculateRoute","length","alert","startPoint","endPoint","startMarker","set","endMarker","extent","Math","min","max","fit","padding","selectedRoute","route","routeFeature","coord","stroke","color","width","lineDash","undefined","directions","step","type","instruction","handleStartLocationChange","value","handleEndLocationChange","children","onStartChange","onEndChange","onSubmit","locations","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toFixed","round","ref","role","direction","_c","$RefreshReg$"],"sources":["/Users/kenn/Documents/GitHub/AccessibleMapBackup/src/components/AccessibleMap.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport OSM from 'ol/source/OSM';\nimport XYZ from 'ol/source/XYZ';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport LineString from 'ol/geom/LineString';\nimport { fromLonLat } from 'ol/proj';\nimport { Icon, Style, Stroke } from 'ol/style';\nimport { defaults as defaultControls } from 'ol/control';\nimport Openrouteservice from 'openrouteservice-js';\nimport MapSearch from './MapSearch/MapSearch';\nimport 'ol/ol.css';\nimport './AccessibleMap.css';\n\n// OpenRouteService API configuration\nconst orsDirections = new Openrouteservice.Directions({\n  api_key: '5b3ce3597851110001cf6248a1d686e75cef4e86a9782464ccdb71cf',\n});\n\n// Types\nexport interface AccessibleMapProps {\n  className?: string;\n}\n\nexport interface Location {\n  name: string;\n  coordinates: [number, number];\n}\n\ninterface TurnByTurnDirection {\n  type: string;\n  instruction: string;\n  distance: number;\n  duration: number;\n}\n\ninterface RouteOption {\n  steps: any;\n  id: number;\n  summary: string;\n  distance: number; // in meters\n  duration: number; // in seconds\n  coordinates: number[][];\n}\n\n// Constants\nconst INITIAL_CENTER = fromLonLat([-84.5831, 34.0390]);\n\n// Location data from JSON file combined\nconst campusLocations: Location[] = [\n  { name: \"Carmichael Student Center\", coordinates: [-84.5831447839737, 34.038533480073355] },\n  { name: \"Carmichael Student Center Entrance\", coordinates: [-84.58283364772798, 34.038660170620055] },\n  { name: \"Academic Learning Center\", coordinates: [-84.58317697048189, 34.03931806936354] },\n  { name: \"Academic Learning Center Entrance\", coordinates: [-84.58298921585084, 34.03978259614599] },\n  { name: \"English Building\", coordinates: [-84.58414524793626, 34.03942475516541] },\n  { name: \"English Building South\", coordinates: [-84.5841532945633, 34.03910025210137] },\n  { name: \"English Building North\", coordinates: [-84.58402454853059, 34.03979815441523] },\n  { name: \"University Hall\", coordinates: [-84.58437055349351, 34.038938000103784] },\n  { name: \"Willingham Hall\", coordinates: [-84.58483189344408, 34.038973562212] },\n  { name: \"Social Sciences\", coordinates: [-84.58521813154222, 34.03870240076022] },\n  { name: \"Technology Services\", coordinates: [-84.58511178527453, 34.04324444304241] },\n  { name: \"Jolley Lodge\", coordinates: [-84.58503997779815, 34.041975382594565] },\n  { name: \"Bailey Performance Center\", coordinates: [-84.58388467029071, 34.04104538235975] },\n  { name: \"Zuckerman Museum\", coordinates: [-84.58332319433181, 34.041127569948884] },\n  { name: \"Prillaman Health Sciences\", coordinates: [-84.5823230947359, 34.04126007515278] },\n  { name: \"Prillaman Health Sciences East\", coordinates: [-84.58227837728104, 34.04040804794117] },\n  { name: \"Prillaman Health Sciences West\", coordinates: [-84.58162052602621, 34.04049249904415] },\n  { name: \"Central Parking Deck\", coordinates: [-84.58155510939581, 34.04091628989932] },\n  { name: \"Visual Arts\", coordinates: [-84.58495900426912, 34.04014013820758] },\n  { name: \"Wilson Annex\", coordinates: [-84.58407716154898, 34.040382041842314] },\n  { name: \"Wilson Building\", coordinates: [-84.5831444233547, 34.04021534710124] },\n  { name: \"Music Building\", coordinates: [-84.58287930990906, 34.040181974276315] },\n  { name: \"The Commons\", coordinates: [-84.5822049725835, 34.040112254887596] },\n  { name: \"Burruss Building\", coordinates: [-84.58182548615811, 34.03916307618097] },\n  { name: \"Burruss Building East\", coordinates: [-84.58151844214942, 34.039334634541554] },\n  { name: \"Bagwell Education Building\", coordinates: [-84.58087532494412, 34.0396379119677] },\n  { name: \"Bagwell Education Building South\", coordinates: [-84.5809418434928, 34.039037425081695] },\n  { name: \"Kennesaw Hall\", coordinates: [-84.580944525696, 34.03889684364226] },\n  { name: \"Kennesaw Hall East\", coordinates: [-84.5807963755791, 34.037958423913985] },\n  { name: \"Kennesaw Hall South\", coordinates: [-84.58038669152127, 34.03813234820042] },\n  { name: \"Convocation Center\", coordinates: [-84.5804216302843, 34.03739857647659] },\n  { name: \"Siegel Student Recreation Center\", coordinates: [-84.58134592872163, 34.03685306796862] },\n  { name: \"Siegel Student Recreation East\", coordinates: [-84.58239021303122, 34.03685051220012] },\n  { name: \"Siegel Student Recreation North\", coordinates: [-84.58220111729591, 34.03752287232788] },\n  { name: \"East Parking Deck\", coordinates: [-84.58115296368257, 34.0366216129326] },\n  { name: \"University Bookstore\", coordinates: [-84.5831169079928, 34.03785497707045] },\n  { name: \"Sturgis Library\", coordinates: [-84.58373969823, 34.03817439372666] },\n  { name: \"Wilder Communications Center\", coordinates: [-84.52081934524365, 33.93455660617953] },\n  { name: \"Civil Engineering Soils Lab\", coordinates: [-84.52036756689206, 33.93540362312106] }\n  // Additional locations would continue here\n];\n\nconst AccessibleMap: React.FC<AccessibleMapProps> = ({ className }) => {\n  const mapRef = useRef<HTMLDivElement | null>(null);\n  const mapInstance = useRef<Map | null>(null);\n  const vectorSourceRef = useRef(new VectorSource());\n  const userMarkerRef = useRef(new Feature());\n  \n  const [viewMode, setViewMode] = useState<'standard' | 'satellite'>('standard');\n  const [startLocation, setStartLocation] = useState('');\n  const [endLocation, setEndLocation] = useState('');\n  const [routeMode, setRouteMode] = useState<'walking' | 'wheelchair'>('walking');\n  const [userLocation, setUserLocation] = useState<number[] | null>(null);\n  const [turnByTurnDirections, setTurnByTurnDirections] = useState<TurnByTurnDirection[]>([]);\n  const [isFlyoutOpen, setIsFlyoutOpen] = useState(false);\n  const [routeOptions, setRouteOptions] = useState<RouteOption[]>([]);\n  const [selectedRouteId, setSelectedRouteId] = useState<number | null>(null);\n\n  // Place accessibility markers on the map\n  const placeMarkers = useCallback(() => {\n    campusLocations.forEach((location) => {\n      const coords = fromLonLat(location.coordinates);\n      const marker = new Feature(new Point(coords));\n\n      marker.setStyle(\n        new Style({\n          image: new Icon({\n            src: 'https://cdn2.iconfinder.com/data/icons/wsd-map-markers-2/512/wsd_markers_97-512.png',\n            scale: 0.04,\n            anchor: [0.5, 1],\n          }),\n        })\n      );\n\n      vectorSourceRef.current.addFeature(marker);\n    });\n  }, []);\n\n  // Start tracking user location\n  const startTracking = useCallback(() => {\n    if (!navigator.geolocation) {\n      console.error('Geolocation is not supported by this browser.');\n      return;\n    }\n\n    const watchId = navigator.geolocation.watchPosition(\n      (position) => {\n        const { latitude, longitude } = position.coords;\n        const lonLat = [longitude, latitude];\n        setUserLocation(lonLat as [number, number]);\n        \n        const coords = fromLonLat(lonLat);\n  \n        // Update marker position\n        userMarkerRef.current.setGeometry(new Point(coords));\n  \n        // Ensure the marker is added only once\n        if (!vectorSourceRef.current.hasFeature(userMarkerRef.current)) {\n          userMarkerRef.current.setStyle(\n            new Style({\n              image: new Icon({\n                src: 'https://cdn-icons-png.flaticon.com/128/884/884094.png',\n                scale: 0.2,\n              }),\n            })\n          );\n          vectorSourceRef.current.addFeature(userMarkerRef.current);\n        }\n  \n        // Follow user location\n        if (mapInstance.current) {\n          mapInstance.current.getView().setCenter(coords);\n        }\n      },\n      (error) => {\n        console.error('Error getting location:', error);\n      },\n      { enableHighAccuracy: true, maximumAge: 0, timeout: 5000 }\n    );\n\n    return () => navigator.geolocation.clearWatch(watchId);\n  }, []);\n\n  // Initialize the map\n  useEffect(() => {\n    if (!mapRef.current) return;\n\n    const vectorLayer = new VectorLayer({ \n      source: vectorSourceRef.current \n    });\n\n    const standardLayer = new TileLayer({ \n      source: new OSM(), \n      visible: true \n    });\n\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        maxZoom: 19,\n      }),\n      visible: false,\n    });\n\n    mapInstance.current = new Map({\n      target: mapRef.current,\n      layers: [standardLayer, satelliteLayer, vectorLayer],\n      view: new View({\n        center: INITIAL_CENTER,\n        zoom: 17,\n        maxZoom: 19,\n      }),\n      controls: defaultControls(),\n    });\n    \n    placeMarkers();\n    startTracking();\n\n  },)\n\n  // Toggle between standard and satellite map views\n  const toggleMapView = useCallback(() => {\n    if (!mapInstance.current) return;\n\n    const layers = mapInstance.current.getLayers().getArray();\n    const standardLayer = layers[0];\n    const satelliteLayer = layers[1];\n\n    if (viewMode === 'standard') {\n      standardLayer.setVisible(false);\n      satelliteLayer.setVisible(true);\n      setViewMode('satellite');\n    } else {\n      standardLayer.setVisible(true);\n      satelliteLayer.setVisible(false);\n      setViewMode('standard');\n    }\n  }, [viewMode]);\n\n  // Toggle between walking and wheelchair route modes\n  const toggleRouteMode = useCallback(() => {\n    setRouteMode(routeMode === 'walking' ? 'wheelchair' : 'walking');\n  }, [routeMode]);\n\n  // Find location coordinates by name\n  const findLocationByName = useCallback((query: string): number[] | null => {\n    if (!query) return null;\n    \n    const lowerQuery = query.toLowerCase();\n    \n    // Try exact match first\n    const exactMatch = campusLocations.find(loc => \n      loc.name.toLowerCase() === lowerQuery\n    );\n    \n    if (exactMatch) return exactMatch.coordinates;\n    \n    // Try partial match\n    const partialMatch = campusLocations.find(loc => \n      loc.name.toLowerCase().includes(lowerQuery)\n    );\n    \n    return partialMatch ? partialMatch.coordinates : null;\n  }, []);\n\n  // Clear previous routes from the map\n  const clearRoutes = useCallback(() => {\n    const features = vectorSourceRef.current.getFeatures();\n    features.forEach(feature => {\n      // Remove only route lines and previous start/end markers\n      if (feature.getGeometry() instanceof LineString || feature.get('type') === 'marker') {\n        vectorSourceRef.current.removeFeature(feature);\n      }\n    });\n    setTurnByTurnDirections([]);\n  }, []);\n\n  // Calculate route options when start and end locations are set\n  useEffect(() => {\n    if (!startLocation || !endLocation) {\n      setIsFlyoutOpen(false);\n      setRouteOptions([]);\n      return;\n    }\n\n    const timer = setTimeout(() => {\n      let startCoords;\n      if (startLocation) {\n        // If user entered a start location, use that\n        startCoords = findLocationByName(startLocation);\n      } else if (userLocation) {\n        // If no start location entered, use current user location\n        startCoords = userLocation;\n      } else {\n        return;\n      }\n\n      const endCoords = findLocationByName(endLocation);\n\n      if (!startCoords || !endCoords) {\n        setIsFlyoutOpen(false);\n        setRouteOptions([]);\n        return;\n      }\n\n      // Calculate routes\n      orsDirections\n        .calculate({\n          coordinates: [startCoords, endCoords],\n          profile: routeMode === 'wheelchair' ? 'wheelchair' : 'foot-walking',\n          format: 'geojson',\n          alternative_routes: { target_count: 3, share_factor: 0.6 },\n          instructions: true\n        })\n        .then((response: any) => {\n          const routes = response.features.map((feature: any, index: number) => ({\n            id: index,\n            summary: `Route ${index + 1}`,\n            distance: feature.properties.summary.distance,\n            duration: feature.properties.summary.duration,\n            coordinates: feature.geometry.coordinates,\n            steps: feature.properties.segments[0].steps\n          }));\n          setRouteOptions(routes);\n          setIsFlyoutOpen(true);\n          setSelectedRouteId(0); // Default to first route\n        })\n        .catch((err: Error) => {\n          console.error('Route calculation error:', err);\n          setIsFlyoutOpen(false);\n          setRouteOptions([]);\n        });\n    }, 500); // 500ms debounce\n\n    return () => clearTimeout(timer);\n  }, [startLocation, endLocation, routeMode, findLocationByName, userLocation]);\n\n  // Calculate and display the selected route\n  const calculateRoute = useCallback(() => {\n    if (selectedRouteId === null || !routeOptions.length) {\n      alert('Please select a route to start.');\n      return;\n    }\n\n    clearRoutes();\n\n    let startCoords;\n    if (startLocation) {\n      // If user entered a start location, use that\n      startCoords = findLocationByName(startLocation);\n    } else if (userLocation) {\n      // If no start location entered, use current user location\n      startCoords = userLocation;\n    } else {\n      alert('Unable to determine your current location. Please enter a start location.');\n      return;\n    }\n  \n    const endCoords = findLocationByName(endLocation);\n  \n    if (!startCoords || !endCoords) {\n      alert('Please enter valid locations');\n      return;\n    }\n  \n    // Convert coordinates to OpenLayers format\n    const startPoint = fromLonLat(startCoords);\n    const endPoint = fromLonLat(endCoords);\n  \n    // Create start marker (blue)\n    const startMarker = new Feature(new Point(startPoint));\n    startMarker.setStyle(\n      new Style({\n        image: new Icon({\n          src: 'https://cdn-icons-png.flaticon.com/128/7976/7976202.png',\n          scale: 0.2,\n          anchor: [0.5, 1],\n        }),\n      })\n    );\n    startMarker.set('type', 'marker');\n  \n    // Create end marker (red)\n    const endMarker = new Feature(new Point(endPoint));\n    endMarker.setStyle(\n      new Style({\n        image: new Icon({\n          src: 'https://cdn-icons-png.flaticon.com/128/9131/9131546.png',\n          scale: 0.2,\n          anchor: [0.5, 1],\n        }),\n      })\n    );\n    endMarker.set('type', 'marker');\n  \n    // Add markers to the vector source\n    vectorSourceRef.current.addFeature(startMarker);\n    vectorSourceRef.current.addFeature(endMarker);\n  \n    // Zoom to fit both markers\n    if (mapInstance.current) {\n      const extent = [\n        Math.min(startPoint[0], endPoint[0]), // Min Longitude\n        Math.min(startPoint[1], endPoint[1]), // Min Latitude\n        Math.max(startPoint[0], endPoint[0]), // Max Longitude\n        Math.max(startPoint[1], endPoint[1]), // Max Latitude\n      ];\n  \n      mapInstance.current.getView().fit(extent, {\n        padding: [50, 50, 50, 50],\n        duration: 1000,\n        maxZoom: 18,\n      });\n    }\n\n    // Display the selected route\n    const selectedRoute = routeOptions.find((route) => route.id === selectedRouteId);\n    if (selectedRoute) {\n      const routeFeature = new Feature({\n        geometry: new LineString(\n          selectedRoute.coordinates.map((coord: number[]) => fromLonLat(coord))\n        ),\n      });\n\n      routeFeature.setStyle(\n        new Style({\n          stroke: new Stroke({\n            color: routeMode === 'wheelchair' ? '#4287f5' : '#2563eb',\n            width: 4,\n            lineDash: routeMode === 'wheelchair' ? [5, 5] : undefined,\n          }),\n        })\n      );\n\n      vectorSourceRef.current.addFeature(routeFeature);\n\n      // Set turn-by-turn directions\n      if (selectedRoute.steps) {\n        const directions: TurnByTurnDirection[] = selectedRoute.steps.map((step: any) => ({\n          type: step.type,\n          instruction: step.instruction,\n          distance: step.distance,\n          duration: step.duration\n        }));\n        \n        setTurnByTurnDirections(directions);\n      }\n    }\n\n    // Close the flyout\n    setIsFlyoutOpen(false);\n  }, [startLocation, endLocation, selectedRouteId, routeOptions, clearRoutes, findLocationByName, userLocation, routeMode]);\n\n  // Handle changing locations\n  const handleStartLocationChange = useCallback((value: string) => {\n    setStartLocation(value);\n  }, []);\n\n  const handleEndLocationChange = useCallback((value: string) => {\n    setEndLocation(value);\n  }, []);\n\n  return (\n    <div className=\"map-wrapper\">\n      <div className=\"map-page\">\n        <div className=\"top-bar\">\n          <div className=\"search-container\">\n            <MapSearch \n              onStartChange={handleStartLocationChange}\n              onEndChange={handleEndLocationChange}\n              onSubmit={calculateRoute}\n              locations={campusLocations}\n            />\n            <div className=\"route-controls\">\n              <button \n                type=\"button\" \n                onClick={calculateRoute}\n                className=\"find-route-button\"\n                aria-label=\"Find route\"\n              >\n                GO\n              </button>\n              <button\n                type=\"button\"\n                onClick={toggleRouteMode}\n                className={`route-mode-toggle ${routeMode === 'wheelchair' ? 'wheelchair-active' : ''}`}\n                aria-label={`Switch to ${routeMode === 'wheelchair' ? 'standard walking' : 'wheelchair'} route`}\n              >\n                {routeMode === 'wheelchair' ? ' 🦽 Wheelchair' : ' 🚶 Walking'}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"map-content\">\n          {isFlyoutOpen && (\n            <div className=\"route-flyout\">\n              <h2>Route Options</h2>\n              {routeOptions.map((route) => (\n                <div\n                  key={route.id}\n                  className={`route-option ${selectedRouteId === route.id ? 'selected' : ''}`}\n                  onClick={() => setSelectedRouteId(route.id)}\n                >\n                  <h3>{route.summary}</h3>\n                  <p>Distance: {(route.distance / 1000).toFixed(2)} km</p>\n                  <p>Duration: {Math.round(route.duration / 60)} minutes</p>\n                </div>\n              ))}\n              <button \n                type=\"button\" \n                onClick={calculateRoute}\n                className=\"select-route-button\"\n                aria-label=\"Select this route\"\n              >\n                Use Selected Route\n              </button>\n            </div>\n          )}\n\n          <div className={`map-root ${className || ''} ${isFlyoutOpen ? 'shifted' : ''}`}>\n            <div \n              ref={mapRef} \n              className=\"map-container\" \n              role=\"application\"\n              aria-label=\"Interactive map displaying user location and navigation\"\n            />\n            <div className=\"map-controls\">\n              <button\n                type=\"button\"\n                onClick={toggleMapView}\n                className=\"map-toggle-button\"\n              >\n                {viewMode === 'standard' ? 'Satellite View' : 'Standard View'}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {turnByTurnDirections.length > 0 && (\n          <div className=\"turn-by-turn-directions\">\n            <h3>Turn-by-Turn Directions</h3>\n            <ul>\n              {turnByTurnDirections.map((direction, index) => (\n                <li key={index}>\n                  {direction.instruction} \n                  <span className=\"direction-details\">\n                    (Distance: {(direction.distance / 1).toFixed(1)} m, \n                    Duration: {(direction.duration / 60).toFixed(1)} min)\n                  </span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AccessibleMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}