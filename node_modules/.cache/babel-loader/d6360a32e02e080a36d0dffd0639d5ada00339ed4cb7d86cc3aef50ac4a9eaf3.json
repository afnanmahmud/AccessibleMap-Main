{"ast":null,"code":"var _jsxFileName = \"/Users/isaacmwesigwa/accessible-map/src/components/AccessibleMap.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport OSM from 'ol/source/OSM';\nimport XYZ from 'ol/source/XYZ';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport LineString from 'ol/geom/LineString';\nimport { fromLonLat } from 'ol/proj';\nimport { Icon, Style, Stroke } from 'ol/style';\nimport { defaults as defaultControls } from 'ol/control';\nimport Openrouteservice from 'openrouteservice-js';\nimport MapSearch from './components/MapSearch';\nimport NavButtonGroup from './components/NavButtonGroup';\nimport 'ol/ol.css';\n\n// Update your types.ts file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Constants\nconst orsDirections = new Openrouteservice.Directions({\n  api_key: '5b3ce3597851110001cf6248a1d686e75cef4e86a9782464ccdb71cf'\n});\nconst INITIAL_CENTER = fromLonLat([-84.5831, 34.0390]);\nconst ACCESSIBLE_LOCATIONS = [{\n  name: 'Carmichael Center',\n  coordinates: [-84.5831447839737, 34.038533480073355]\n}];\nconst AccessibleMap = ({\n  className\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const vectorSourceRef = useRef(new VectorSource());\n  const userMarkerRef = useRef(new Feature());\n  const [viewMode, setViewMode] = useState('standard');\n  const [routeMode, setRouteMode] = useState('walking');\n  const [startLocation, setStartLocation] = useState('');\n  const [endLocation, setEndLocation] = useState('');\n  useEffect(() => {\n    if (!mapRef.current) return;\n    const vectorLayer = new VectorLayer({\n      source: vectorSourceRef.current\n    });\n    const standardLayer = new TileLayer({\n      source: new OSM(),\n      visible: true\n    });\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        maxZoom: 19\n      }),\n      visible: false\n    });\n    mapInstance.current = new Map({\n      target: mapRef.current,\n      layers: [standardLayer, satelliteLayer, vectorLayer],\n      view: new View({\n        center: INITIAL_CENTER,\n        zoom: 17,\n        maxZoom: 19\n      }),\n      controls: defaultControls()\n    });\n    placeMarkers();\n    startTracking();\n    return () => {\n      var _mapInstance$current;\n      (_mapInstance$current = mapInstance.current) === null || _mapInstance$current === void 0 ? void 0 : _mapInstance$current.setTarget(undefined);\n    };\n  }, []);\n  const toggleViewMode = useCallback(() => {\n    if (!mapInstance.current) return;\n    const layers = mapInstance.current.getLayers().getArray();\n    layers[0].setVisible(viewMode === 'satellite');\n    layers[1].setVisible(viewMode === 'standard');\n    setViewMode(prev => prev === 'standard' ? 'satellite' : 'standard');\n  }, [viewMode]);\n  const toggleRouteMode = useCallback(() => {\n    setRouteMode(prev => prev === 'walking' ? 'wheelchair' : 'walking');\n  }, []);\n  const placeMarkers = useCallback(() => {\n    ACCESSIBLE_LOCATIONS.forEach(({\n      coordinates\n    }) => {\n      const marker = new Feature({\n        geometry: new Point(fromLonLat(coordinates))\n      });\n      marker.setStyle(new Style({\n        image: new Icon({\n          src: 'https://cdn2.iconfinder.com/data/icons/wsd-map-markers-2/512/wsd_markers_97-512.png',\n          scale: 0.04,\n          anchor: [0.5, 1]\n        })\n      }));\n      vectorSourceRef.current.addFeature(marker);\n    });\n  }, []);\n  const startTracking = useCallback(() => {\n    if (!navigator.geolocation) {\n      console.error('Geolocation is not supported');\n      return;\n    }\n    const watchId = navigator.geolocation.watchPosition(({\n      coords\n    }) => {\n      var _mapInstance$current2;\n      const coordinates = fromLonLat([coords.longitude, coords.latitude]);\n      userMarkerRef.current.setGeometry(new Point(coordinates));\n      if (!vectorSourceRef.current.hasFeature(userMarkerRef.current)) {\n        userMarkerRef.current.setStyle(new Style({\n          image: new Icon({\n            src: 'https://cdn-icons-png.flaticon.com/128/884/884094.png',\n            scale: 0.2\n          })\n        }));\n        vectorSourceRef.current.addFeature(userMarkerRef.current);\n      }\n      (_mapInstance$current2 = mapInstance.current) === null || _mapInstance$current2 === void 0 ? void 0 : _mapInstance$current2.getView().setCenter(coordinates);\n    }, error => console.error('Tracking error:', error), {\n      enableHighAccuracy: true,\n      maximumAge: 0,\n      timeout: 5000\n    });\n    return () => navigator.geolocation.clearWatch(watchId);\n  }, []);\n  const findLocationByName = useCallback(query => {\n    var _ACCESSIBLE_LOCATIONS;\n    if (!query) return null;\n    const lowerQuery = query.toLowerCase();\n    return ((_ACCESSIBLE_LOCATIONS = ACCESSIBLE_LOCATIONS.find(loc => loc.name.toLowerCase() === lowerQuery || loc.name.toLowerCase().includes(lowerQuery))) === null || _ACCESSIBLE_LOCATIONS === void 0 ? void 0 : _ACCESSIBLE_LOCATIONS.coordinates) || null;\n  }, []);\n  const clearRoutes = useCallback(() => {\n    vectorSourceRef.current.getFeatures().filter(feature => feature.getGeometry() instanceof LineString || feature.get('type') === 'marker').forEach(feature => {\n      var _vectorSourceRef$curr;\n      return (_vectorSourceRef$curr = vectorSourceRef.current) === null || _vectorSourceRef$curr === void 0 ? void 0 : _vectorSourceRef$curr.removeFeature(feature);\n    });\n  }, []);\n  const calculateRoute = useCallback(() => {\n    var _mapInstance$current3;\n    clearRoutes();\n    const startCoords = findLocationByName(startLocation);\n    const endCoords = findLocationByName(endLocation);\n    if (!startCoords || !endCoords) {\n      alert('Please enter valid start and end locations');\n      return;\n    }\n    const startPoint = fromLonLat(startCoords);\n    const endPoint = fromLonLat(endCoords);\n    const addMarker = (point, src) => {\n      const marker = new Feature({\n        geometry: new Point(point),\n        type: 'marker'\n      });\n      marker.setStyle(new Style({\n        image: new Icon({\n          src,\n          scale: 0.2,\n          anchor: [0.5, 1]\n        })\n      }));\n      vectorSourceRef.current.addFeature(marker);\n    };\n    addMarker(startPoint, 'https://cdn-icons-png.flaticon.com/128/7976/7976202.png');\n    addMarker(endPoint, 'https://cdn-icons-png.flaticon.com/128/9131/9131546.png');\n    (_mapInstance$current3 = mapInstance.current) === null || _mapInstance$current3 === void 0 ? void 0 : _mapInstance$current3.getView().fit([Math.min(startPoint[0], endPoint[0]), Math.min(startPoint[1], endPoint[1]), Math.max(startPoint[0], endPoint[0]), Math.max(startPoint[1], endPoint[1])], {\n      padding: [50, 50, 50, 50],\n      duration: 1000,\n      maxZoom: 18\n    });\n    orsDirections.calculate({\n      coordinates: [startCoords, endCoords],\n      profile: routeMode === 'wheelchair' ? 'wheelchair' : 'foot-walking',\n      format: 'geojson',\n      alternative_routes: {\n        target_count: 3,\n        share_factor: 0.6\n      },\n      ...(routeMode === 'wheelchair' && {\n        options: {}\n      })\n    }).then(response => {\n      const colors = routeMode === 'wheelchair' ? ['blue', 'grey', 'black'] : ['blue', 'grey', 'black'];\n      response.features.forEach((feature, index) => {\n        const route = new Feature({\n          geometry: new LineString(feature.geometry.coordinates.map(coord => fromLonLat(coord)))\n        });\n        route.setStyle(new Style({\n          stroke: new Stroke({\n            color: colors[index % colors.length],\n            width: 4,\n            lineDash: routeMode === 'wheelchair' ? [5, 5] : undefined\n          })\n        }));\n        vectorSourceRef.current.addFeature(route);\n      });\n    }).catch(err => console.error('Route calculation error:', err));\n  }, [startLocation, endLocation, routeMode, clearRoutes, findLocationByName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(MapSearch, {\n            onStartChange: setStartLocation,\n            onEndChange: setEndLocation,\n            onSubmit: calculateRoute\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"route-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: calculateRoute,\n              className: \"find-route-button\",\n              \"aria-label\": \"Calculate route\",\n              children: \"GO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleRouteMode,\n              className: `route-mode-toggle ${routeMode === 'wheelchair' ? 'wheelchair-active' : ''}`,\n              \"aria-label\": `Switch to ${routeMode === 'wheelchair' ? 'walking' : 'wheelchair'} route`,\n              children: routeMode === 'wheelchair' ? 'Walking' : 'Wheelchair'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavButtonGroup, {\n          \"aria-label\": \"Map navigation controls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `map-root ${className || ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: mapRef,\n          className: \"map-container\",\n          role: \"application\",\n          \"aria-label\": \"Interactive accessibility map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleViewMode,\n            className: \"map-toggle-button\",\n            children: viewMode === 'standard' ? 'Satellite' : 'Standard'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .map-root {\n          position: relative;\n          flex: 1;\n          width: 100%;\n          min-height: 600px;\n          background-color: #f5f5f5;\n        }\n        \n        .map-container {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n        }\n        \n        .map-toggle-button {\n          position: absolute;\n          top: 10px;\n          right: 10px;\n          z-index: 1000;\n          padding: 8px 16px;\n          background-color: white;\n          border: 1px solid #ccc;\n          border-radius: 4px;\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n          cursor: pointer;\n          font-size: 14px;\n          transition: all 0.2s ease;\n        }\n        \n        .map-toggle-button:hover {\n          background-color: #f8f8f8;\n          transform: translateY(-1px);\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        }\n        \n        .top-bar {\n          width: 100%;\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          padding: 0 3rem;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n_s(AccessibleMap, \"2+jOPAIB7ZNVHIqT0qzNrE45i90=\");\n_c = AccessibleMap;\nexport default AccessibleMap;\nvar _c;\n$RefreshReg$(_c, \"AccessibleMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","Map","View","TileLayer","VectorLayer","VectorSource","OSM","XYZ","Feature","Point","LineString","fromLonLat","Icon","Style","Stroke","defaults","defaultControls","Openrouteservice","MapSearch","NavButtonGroup","jsxDEV","_jsxDEV","orsDirections","Directions","api_key","INITIAL_CENTER","ACCESSIBLE_LOCATIONS","name","coordinates","AccessibleMap","className","_s","mapRef","mapInstance","vectorSourceRef","userMarkerRef","viewMode","setViewMode","routeMode","setRouteMode","startLocation","setStartLocation","endLocation","setEndLocation","current","vectorLayer","source","standardLayer","visible","satelliteLayer","url","maxZoom","target","layers","view","center","zoom","controls","placeMarkers","startTracking","_mapInstance$current","setTarget","undefined","toggleViewMode","getLayers","getArray","setVisible","prev","toggleRouteMode","forEach","marker","geometry","setStyle","image","src","scale","anchor","addFeature","navigator","geolocation","console","error","watchId","watchPosition","coords","_mapInstance$current2","longitude","latitude","setGeometry","hasFeature","getView","setCenter","enableHighAccuracy","maximumAge","timeout","clearWatch","findLocationByName","query","_ACCESSIBLE_LOCATIONS","lowerQuery","toLowerCase","find","loc","includes","clearRoutes","getFeatures","filter","feature","getGeometry","get","_vectorSourceRef$curr","removeFeature","calculateRoute","_mapInstance$current3","startCoords","endCoords","alert","startPoint","endPoint","addMarker","point","type","fit","Math","min","max","padding","duration","calculate","profile","format","alternative_routes","target_count","share_factor","options","then","response","colors","features","index","route","map","coord","stroke","color","length","width","lineDash","catch","err","children","onStartChange","onEndChange","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","role","jsx","_c","$RefreshReg$"],"sources":["/Users/isaacmwesigwa/accessible-map/src/components/AccessibleMap.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport OSM from 'ol/source/OSM';\nimport XYZ from 'ol/source/XYZ';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport LineString from 'ol/geom/LineString';\nimport { fromLonLat } from 'ol/proj';\nimport { Icon, Style, Stroke } from 'ol/style';\nimport { defaults as defaultControls } from 'ol/control';\nimport Openrouteservice from 'openrouteservice-js';\nimport MapSearch from './components/MapSearch';\nimport NavButtonGroup from './components/NavButtonGroup';\nimport 'ol/ol.css';\n\n// Update your types.ts file\nexport interface AccessibleMapProps {\n  className?: string;\n}\n\nexport interface Location {\n  name: string;\n  coordinates: [number, number];\n}\n\n// Constants\nconst orsDirections = new Openrouteservice.Directions({\n  api_key: '5b3ce3597851110001cf6248a1d686e75cef4e86a9782464ccdb71cf',\n});\n\nconst INITIAL_CENTER = fromLonLat([-84.5831, 34.0390]);\nconst ACCESSIBLE_LOCATIONS: Location[] = [\n  { name: 'Carmichael Center', coordinates: [-84.5831447839737, 34.038533480073355] },\n];\n\nconst AccessibleMap: React.FC<AccessibleMapProps> = ({ className }) => {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const mapInstance = useRef<Map | null>(null);\n  const vectorSourceRef = useRef<VectorSource>(new VectorSource());\n  const userMarkerRef = useRef<Feature<Point>>(new Feature());\n  \n  const [viewMode, setViewMode] = useState<'standard' | 'satellite'>('standard');\n  const [routeMode, setRouteMode] = useState<'walking' | 'wheelchair'>('walking');\n  const [startLocation, setStartLocation] = useState<string>('');\n  const [endLocation, setEndLocation] = useState<string>('');\n\n  useEffect(() => {\n    if (!mapRef.current) return;\n\n    const vectorLayer = new VectorLayer({ source: vectorSourceRef.current });\n    const standardLayer = new TileLayer({ source: new OSM(), visible: true });\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        maxZoom: 19,\n      }),\n      visible: false,\n    });\n\n    mapInstance.current = new Map({\n      target: mapRef.current,\n      layers: [standardLayer, satelliteLayer, vectorLayer],\n      view: new View({\n        center: INITIAL_CENTER,\n        zoom: 17,\n        maxZoom: 19,\n      }),\n      controls: defaultControls(),\n    });\n\n    placeMarkers();\n    startTracking();\n\n    return () => {\n      mapInstance.current?.setTarget(undefined);\n    };\n  }, []);\n\n  const toggleViewMode = useCallback(() => {\n    if (!mapInstance.current) return;\n\n    const layers = mapInstance.current.getLayers().getArray();\n    layers[0].setVisible(viewMode === 'satellite');\n    layers[1].setVisible(viewMode === 'standard');\n    setViewMode(prev => prev === 'standard' ? 'satellite' : 'standard');\n  }, [viewMode]);\n\n  const toggleRouteMode = useCallback(() => {\n    setRouteMode(prev => prev === 'walking' ? 'wheelchair' : 'walking');\n  }, []);\n\n  const placeMarkers = useCallback(() => {\n    ACCESSIBLE_LOCATIONS.forEach(({ coordinates }) => {\n      const marker = new Feature({\n        geometry: new Point(fromLonLat(coordinates)),\n      });\n      \n      marker.setStyle(new Style({\n        image: new Icon({\n          src: 'https://cdn2.iconfinder.com/data/icons/wsd-map-markers-2/512/wsd_markers_97-512.png',\n          scale: 0.04,\n          anchor: [0.5, 1],\n        }),\n      }));\n\n      vectorSourceRef.current.addFeature(marker);\n    });\n  }, []);\n\n  const startTracking = useCallback(() => {\n    if (!navigator.geolocation) {\n      console.error('Geolocation is not supported');\n      return;\n    }\n\n    const watchId = navigator.geolocation.watchPosition(\n      ({ coords }) => {\n        const coordinates = fromLonLat([coords.longitude, coords.latitude]);\n        userMarkerRef.current.setGeometry(new Point(coordinates));\n\n        if (!vectorSourceRef.current.hasFeature(userMarkerRef.current)) {\n          userMarkerRef.current.setStyle(new Style({\n            image: new Icon({\n              src: 'https://cdn-icons-png.flaticon.com/128/884/884094.png',\n              scale: 0.2,\n            }),\n          }));\n          vectorSourceRef.current.addFeature(userMarkerRef.current);\n        }\n\n        mapInstance.current?.getView().setCenter(coordinates);\n      },\n      (error) => console.error('Tracking error:', error),\n      { enableHighAccuracy: true, maximumAge: 0, timeout: 5000 }\n    );\n\n    return () => navigator.geolocation.clearWatch(watchId);\n  }, []);\n\n  const findLocationByName = useCallback((query: string): number[] | null => {\n    if (!query) return null;\n    \n    const lowerQuery = query.toLowerCase();\n    return ACCESSIBLE_LOCATIONS.find(loc => \n      loc.name.toLowerCase() === lowerQuery || \n      loc.name.toLowerCase().includes(lowerQuery)\n    )?.coordinates || null;\n  }, []);\n\n  const clearRoutes = useCallback(() => {\n    vectorSourceRef.current.getFeatures()\n      .filter((feature: Feature) => \n        feature.getGeometry() instanceof LineString || \n        feature.get('type') === 'marker'\n      )\n      .forEach((feature: Feature) => \n        vectorSourceRef.current?.removeFeature(feature)\n      );\n  }, []);\n\n  const calculateRoute = useCallback(() => {\n    clearRoutes();\n    const startCoords = findLocationByName(startLocation);\n    const endCoords = findLocationByName(endLocation);\n\n    if (!startCoords || !endCoords) {\n      alert('Please enter valid start and end locations');\n      return;\n    }\n\n    const startPoint = fromLonLat(startCoords);\n    const endPoint = fromLonLat(endCoords);\n\n    const addMarker = (point: number[], src: string) => {\n      const marker = new Feature({\n        geometry: new Point(point),\n        type: 'marker',\n      });\n      marker.setStyle(new Style({\n        image: new Icon({\n          src,\n          scale: 0.2,\n          anchor: [0.5, 1],\n        }),\n      }));\n      vectorSourceRef.current.addFeature(marker);\n    };\n\n    addMarker(startPoint, 'https://cdn-icons-png.flaticon.com/128/7976/7976202.png');\n    addMarker(endPoint, 'https://cdn-icons-png.flaticon.com/128/9131/9131546.png');\n\n    mapInstance.current?.getView().fit(\n      [\n        Math.min(startPoint[0], endPoint[0]),\n        Math.min(startPoint[1], endPoint[1]),\n        Math.max(startPoint[0], endPoint[0]),\n        Math.max(startPoint[1], endPoint[1]),\n      ],\n      { padding: [50, 50, 50, 50], duration: 1000, maxZoom: 18 }\n    );\n\n    orsDirections.calculate({\n      coordinates: [startCoords, endCoords],\n      profile: routeMode === 'wheelchair' ? 'wheelchair' : 'foot-walking',\n      format: 'geojson',\n      alternative_routes: { target_count: 3, share_factor: 0.6 },\n      ...(routeMode === 'wheelchair' && { options: {} }),\n    })\n      .then((response: any) => {\n        const colors = routeMode === 'wheelchair' \n          ? ['blue', 'grey', 'black']\n          : ['blue', 'grey', 'black'];\n\n        response.features.forEach((feature: any, index: number) => {\n          const route = new Feature({\n            geometry: new LineString(feature.geometry.coordinates.map((coord: number[]) => fromLonLat(coord))),\n          });\n          \n          route.setStyle(new Style({\n            stroke: new Stroke({\n              color: colors[index % colors.length],\n              width: 4,\n              lineDash: routeMode === 'wheelchair' ? [5, 5] : undefined,\n            }),\n          }));\n\n          vectorSourceRef.current.addFeature(route);\n        });\n      })\n      .catch((err: Error) => console.error('Route calculation error:', err));\n  }, [startLocation, endLocation, routeMode, clearRoutes, findLocationByName]);\n\n  return (\n    <div className=\"map-wrapper\">\n      <div className=\"map-page\">\n        <div className=\"top-bar\">\n          <div className=\"search-container\">\n            <MapSearch\n              onStartChange={setStartLocation}\n              onEndChange={setEndLocation}\n              onSubmit={calculateRoute}\n            />\n            <div className=\"route-controls\">\n              <button\n                onClick={calculateRoute}\n                className=\"find-route-button\"\n                aria-label=\"Calculate route\"\n              >\n                GO\n              </button>\n              <button\n                onClick={toggleRouteMode}\n                className={`route-mode-toggle ${routeMode === 'wheelchair' ? 'wheelchair-active' : ''}`}\n                aria-label={`Switch to ${routeMode === 'wheelchair' ? 'walking' : 'wheelchair'} route`}\n              >\n                {routeMode === 'wheelchair' ? 'Walking' : 'Wheelchair'}\n              </button>\n            </div>\n          </div>\n          <NavButtonGroup aria-label=\"Map navigation controls\" />\n        </div>\n\n        <div className={`map-root ${className || ''}`}>\n          <div\n            ref={mapRef}\n            className=\"map-container\"\n            role=\"application\"\n            aria-label=\"Interactive accessibility map\"\n          />\n          <div className=\"map-controls\">\n            <button\n              onClick={toggleViewMode}\n              className=\"map-toggle-button\"\n            >\n              {viewMode === 'standard' ? 'Satellite' : 'Standard'}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* For styled-jsx, you'll need to install it if not already present */}\n      <style jsx>{`\n        .map-root {\n          position: relative;\n          flex: 1;\n          width: 100%;\n          min-height: 600px;\n          background-color: #f5f5f5;\n        }\n        \n        .map-container {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n        }\n        \n        .map-toggle-button {\n          position: absolute;\n          top: 10px;\n          right: 10px;\n          z-index: 1000;\n          padding: 8px 16px;\n          background-color: white;\n          border: 1px solid #ccc;\n          border-radius: 4px;\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n          cursor: pointer;\n          font-size: 14px;\n          transition: all 0.2s ease;\n        }\n        \n        .map-toggle-button:hover {\n          background-color: #f8f8f8;\n          transform: translateY(-1px);\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        }\n        \n        .top-bar {\n          width: 100%;\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          padding: 0 3rem;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default AccessibleMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}