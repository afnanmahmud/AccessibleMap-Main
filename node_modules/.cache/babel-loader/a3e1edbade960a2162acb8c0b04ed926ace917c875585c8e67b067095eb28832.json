{"ast":null,"code":"var _jsxFileName = \"/Users/kenn/Documents/GitHub/AccessibleMapBackup/src/components/AccessibleMap.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport OSM from 'ol/source/OSM';\nimport XYZ from 'ol/source/XYZ';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport LineString from 'ol/geom/LineString';\nimport { fromLonLat } from 'ol/proj';\nimport { Icon, Style, Stroke } from 'ol/style';\nimport { defaults as defaultControls } from 'ol/control';\nimport Openrouteservice from 'openrouteservice-js';\nimport MapSearch from './MapSearch/MapSearch';\nimport 'ol/ol.css';\nimport './AccessibleMap.css';\nimport locationsData from './campuslocations.json';\n\n// OpenRouteService API configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst orsDirections = new Openrouteservice.Directions({\n  api_key: '5b3ce3597851110001cf6248a1d686e75cef4e86a9782464ccdb71cf'\n});\n\n// Types\n\n// Constants\nconst INITIAL_CENTER = fromLonLat([-84.5831, 34.0390]);\n\n// Load campus locations from JSON file\nconst campusLocations = locationsData.locations.map(loc => ({\n  name: loc.name,\n  coordinates: loc.coordinates\n}));\nconst AccessibleMap = ({\n  className\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const vectorSourceRef = useRef(new VectorSource());\n  const userMarkerRef = useRef(new Feature());\n  const [viewMode, setViewMode] = useState('standard');\n  const [startLocation, setStartLocation] = useState('');\n  const [endLocation, setEndLocation] = useState('');\n  const [routeMode, setRouteMode] = useState('walking');\n  const [userLocation, setUserLocation] = useState(null);\n  const [turnByTurnDirections, setTurnByTurnDirections] = useState([]);\n  const [isFlyoutOpen, setIsFlyoutOpen] = useState(false);\n  const [routeOptions, setRouteOptions] = useState([]);\n  const [selectedRouteId, setSelectedRouteId] = useState(null);\n\n  // Place accessibility markers on the map\n  const placeMarkers = useCallback(() => {\n    campusLocations.forEach(location => {\n      const coords = fromLonLat(location.coordinates);\n      const marker = new Feature(new Point(coords));\n      marker.setStyle(new Style({\n        image: new Icon({\n          src: 'https://cdn2.iconfinder.com/data/icons/wsd-map-markers-2/512/wsd_markers_97-512.png',\n          scale: 0.04,\n          anchor: [0.5, 1]\n        })\n      }));\n      vectorSourceRef.current.addFeature(marker);\n    });\n  }, []);\n\n  // Start tracking user location\n  const startTracking = useCallback(() => {\n    if (!navigator.geolocation) {\n      console.error('Geolocation is not supported by this browser.');\n      return;\n    }\n    const watchId = navigator.geolocation.watchPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      const lonLat = [longitude, latitude];\n      setUserLocation(lonLat);\n      const coords = fromLonLat(lonLat);\n\n      // Update marker position\n      userMarkerRef.current.setGeometry(new Point(coords));\n\n      // Ensure the marker is added only once\n      if (!vectorSourceRef.current.hasFeature(userMarkerRef.current)) {\n        userMarkerRef.current.setStyle(new Style({\n          image: new Icon({\n            src: 'https://cdn-icons-png.flaticon.com/128/884/884094.png',\n            scale: 0.2\n          })\n        }));\n        vectorSourceRef.current.addFeature(userMarkerRef.current);\n      }\n\n      // Follow user location\n      if (mapInstance.current) {\n        mapInstance.current.getView().setCenter(coords);\n      }\n    }, error => {\n      console.error('Error getting location:', error);\n    }, {\n      enableHighAccuracy: true,\n      maximumAge: 0,\n      timeout: 5000\n    });\n    return () => navigator.geolocation.clearWatch(watchId);\n  }, []);\n\n  // Initialize the map\n  useEffect(() => {\n    if (!mapRef.current) return;\n    const vectorLayer = new VectorLayer({\n      source: vectorSourceRef.current\n    });\n    const standardLayer = new TileLayer({\n      source: new OSM(),\n      visible: true\n    });\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        maxZoom: 19\n      }),\n      visible: false\n    });\n    mapInstance.current = new Map({\n      target: mapRef.current,\n      layers: [standardLayer, satelliteLayer, vectorLayer],\n      view: new View({\n        center: INITIAL_CENTER,\n        zoom: 17,\n        maxZoom: 19\n      }),\n      controls: defaultControls()\n    });\n    startTracking();\n    placeMarkers();\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.setTarget(undefined);\n        mapInstance.current = null;\n      }\n    };\n  }, []);\n\n  // Toggle between standard and satellite map views\n  const toggleMapView = useCallback(() => {\n    if (!mapInstance.current) return;\n    const layers = mapInstance.current.getLayers().getArray();\n    const standardLayer = layers[0];\n    const satelliteLayer = layers[1];\n    if (viewMode === 'standard') {\n      standardLayer.setVisible(false);\n      satelliteLayer.setVisible(true);\n      setViewMode('satellite');\n    } else {\n      standardLayer.setVisible(true);\n      satelliteLayer.setVisible(false);\n      setViewMode('standard');\n    }\n  }, [viewMode]);\n\n  // Toggle between walking and wheelchair route modes\n  const toggleRouteMode = useCallback(() => {\n    setRouteMode(routeMode === 'walking' ? 'wheelchair' : 'walking');\n  }, [routeMode]);\n\n  // Find location coordinates by name\n  const findLocationByName = useCallback(query => {\n    if (!query || query.toLowerCase() === 'my location') return null;\n    const lowerQuery = query.toLowerCase();\n    const exactMatch = campusLocations.find(loc => loc.name.toLowerCase() === lowerQuery);\n    if (exactMatch) return exactMatch.coordinates;\n    const partialMatch = campusLocations.find(loc => loc.name.toLowerCase().includes(lowerQuery));\n    return partialMatch ? partialMatch.coordinates : null;\n  }, []);\n\n  // Clear previous routes from the map\n  const clearRoutes = useCallback(() => {\n    const features = vectorSourceRef.current.getFeatures();\n    features.forEach(feature => {\n      // Remove only route lines and previous start/end markers\n      if (feature.getGeometry() instanceof LineString || feature.get('type') === 'marker') {\n        vectorSourceRef.current.removeFeature(feature);\n      }\n    });\n    setTurnByTurnDirections([]);\n  }, []);\n\n  // Calculate route options when start and end locations are set\n  useEffect(() => {\n    if (!startLocation || !endLocation) {\n      setIsFlyoutOpen(false);\n      setRouteOptions([]);\n      return;\n    }\n    const timer = setTimeout(() => {\n      let startCoords;\n      if (startLocation) {\n        // If user entered a start location, use that\n        startCoords = findLocationByName(startLocation);\n      } else if (userLocation) {\n        // If no start location entered, use current user location\n        startCoords = userLocation;\n      } else {\n        return;\n      }\n      const endCoords = findLocationByName(endLocation);\n      if (!startLocation && !userLocation || !endLocation) {\n        setIsFlyoutOpen(false);\n        setRouteOptions([]);\n        return;\n      }\n\n      // Calculate routes\n      orsDirections.calculate({\n        coordinates: [startCoords, endCoords],\n        profile: routeMode === 'wheelchair' ? 'wheelchair' : 'foot-walking',\n        format: 'geojson',\n        alternative_routes: {\n          target_count: 3,\n          share_factor: 0.6\n        },\n        instructions: true\n      }).then(response => {\n        const routes = response.features.map((feature, index) => ({\n          id: index,\n          summary: `Route ${index + 1}`,\n          distance: feature.properties.summary.distance,\n          duration: feature.properties.summary.duration,\n          coordinates: feature.geometry.coordinates,\n          steps: feature.properties.segments[0].steps\n        }));\n        setRouteOptions(routes);\n        setIsFlyoutOpen(true);\n        setSelectedRouteId(0); // Default to first route\n      }).catch(err => {\n        console.error('Route calculation error:', err);\n        setIsFlyoutOpen(false);\n        setRouteOptions([]);\n      });\n    }, 500); // 500ms debounce\n\n    return () => clearTimeout(timer);\n  }, [startLocation, endLocation, routeMode, findLocationByName, userLocation]);\n\n  // Calculate and display the selected route\n  const calculateRoute = useCallback(() => {\n    if (!endLocation) {\n      alert('Please enter a valid destination.');\n      return;\n    }\n    let startCoords = userLocation; // Default to user's location\n    if (startLocation && startLocation.toLowerCase() !== 'my location') {\n      startCoords = findLocationByName(startLocation);\n    }\n    const endCoords = findLocationByName(endLocation);\n    if (!startCoords || !endCoords) {\n      alert('Unable to determine locations. Please enter valid locations.');\n      return;\n    }\n\n    // Convert coordinates to OpenLayers format\n    const startPoint = fromLonLat(startCoords);\n    const endPoint = fromLonLat(endCoords);\n\n    // Create start marker\n    const startMarker = new Feature(new Point(startPoint));\n    startMarker.setStyle(new Style({\n      image: new Icon({\n        src: 'https://cdn-icons-png.flaticon.com/128/7976/7976202.png',\n        scale: 0.2,\n        anchor: [0.5, 1]\n      })\n    }));\n    startMarker.set('type', 'marker');\n\n    // Create end marker\n    const endMarker = new Feature(new Point(endPoint));\n    endMarker.setStyle(new Style({\n      image: new Icon({\n        src: 'https://cdn-icons-png.flaticon.com/128/9131/9131546.png',\n        scale: 0.2,\n        anchor: [0.5, 1]\n      })\n    }));\n    endMarker.set('type', 'marker');\n\n    // Add markers to the vector source\n    vectorSourceRef.current.addFeature(startMarker);\n    vectorSourceRef.current.addFeature(endMarker);\n\n    // Zoom to fit both markers\n    if (mapInstance.current) {\n      const extent = [Math.min(startPoint[0], endPoint[0]), Math.min(startPoint[1], endPoint[1]), Math.max(startPoint[0], endPoint[0]), Math.max(startPoint[1], endPoint[1])];\n      mapInstance.current.getView().fit(extent, {\n        padding: [50, 50, 50, 50],\n        duration: 1000,\n        maxZoom: 18\n      });\n    }\n\n    // Display the selected route\n    const selectedRoute = routeOptions.find(route => route.id === selectedRouteId);\n    if (selectedRoute) {\n      const routeFeature = new Feature({\n        geometry: new LineString(selectedRoute.coordinates.map(coord => fromLonLat(coord)))\n      });\n      routeFeature.setStyle(new Style({\n        stroke: new Stroke({\n          color: routeMode === 'wheelchair' ? '#4287f5' : '#2563eb',\n          width: 4,\n          lineDash: routeMode === 'wheelchair' ? [5, 5] : undefined\n        })\n      }));\n      vectorSourceRef.current.addFeature(routeFeature);\n\n      // Set turn-by-turn directions\n      if (selectedRoute.steps) {\n        const directions = selectedRoute.steps.map(step => ({\n          type: step.type,\n          instruction: step.instruction,\n          distance: step.distance,\n          duration: step.duration\n        }));\n        setTurnByTurnDirections(directions);\n      }\n    }\n    setIsFlyoutOpen(false);\n  }, [startLocation, endLocation, selectedRouteId, routeOptions, clearRoutes, findLocationByName, userLocation, routeMode]);\n\n  // Handle changing locations\n  const handleStartLocationChange = useCallback(value => {\n    setStartLocation(value);\n  }, []);\n  const handleEndLocationChange = useCallback(value => {\n    setEndLocation(value);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(MapSearch, {\n            onStartChange: handleStartLocationChange,\n            onEndChange: handleEndLocationChange,\n            onSubmit: calculateRoute,\n            locations: campusLocations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"route-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: calculateRoute,\n              className: \"find-route-button\",\n              \"aria-label\": \"Find route\",\n              children: \"GO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: toggleRouteMode,\n              className: `route-mode-toggle ${routeMode === 'wheelchair' ? 'wheelchair-active' : ''}`,\n              \"aria-label\": `Switch to ${routeMode === 'wheelchair' ? 'standard walking' : 'wheelchair'} route`,\n              children: routeMode === 'wheelchair' ? ' 🦽 Wheelchair' : ' 🚶 Walking'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-content\",\n        children: [isFlyoutOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-flyout\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Route Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this), routeOptions.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `route-option ${selectedRouteId === route.id ? 'selected' : ''}`,\n            onClick: () => setSelectedRouteId(route.id),\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: route.summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Distance: \", (route.distance / 1000).toFixed(2), \" km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Duration: \", Math.round(route.duration / 60), \" minutes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 19\n            }, this)]\n          }, route.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: calculateRoute,\n            className: \"select-route-button\",\n            \"aria-label\": \"Select this route\",\n            children: \"Use Selected Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `map-root ${className || ''} ${isFlyoutOpen ? 'shifted' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            ref: mapRef,\n            className: \"map-container\",\n            role: \"application\",\n            \"aria-label\": \"Interactive map displaying user location and navigation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-controls\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: toggleMapView,\n              className: \"map-toggle-button\",\n              children: viewMode === 'standard' ? 'Satellite View' : 'Standard View'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), turnByTurnDirections.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"turn-by-turn-directions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Turn-by-Turn Directions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: turnByTurnDirections.map((direction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [direction.instruction, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"direction-details\",\n              children: [\"(Distance: \", (direction.distance / 1).toFixed(1), \" m, Duration: \", (direction.duration / 60).toFixed(1), \" min)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 417,\n    columnNumber: 5\n  }, this);\n};\n_s(AccessibleMap, \"AY4xd09G57nMpWu3wbQqhUfp5hI=\");\n_c = AccessibleMap;\nexport default AccessibleMap;\nvar _c;\n$RefreshReg$(_c, \"AccessibleMap\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","Map","View","TileLayer","VectorLayer","VectorSource","OSM","XYZ","Feature","Point","LineString","fromLonLat","Icon","Style","Stroke","defaults","defaultControls","Openrouteservice","MapSearch","locationsData","jsxDEV","_jsxDEV","orsDirections","Directions","api_key","INITIAL_CENTER","campusLocations","locations","map","loc","name","coordinates","AccessibleMap","className","_s","mapRef","mapInstance","vectorSourceRef","userMarkerRef","viewMode","setViewMode","startLocation","setStartLocation","endLocation","setEndLocation","routeMode","setRouteMode","userLocation","setUserLocation","turnByTurnDirections","setTurnByTurnDirections","isFlyoutOpen","setIsFlyoutOpen","routeOptions","setRouteOptions","selectedRouteId","setSelectedRouteId","placeMarkers","forEach","location","coords","marker","setStyle","image","src","scale","anchor","current","addFeature","startTracking","navigator","geolocation","console","error","watchId","watchPosition","position","latitude","longitude","lonLat","setGeometry","hasFeature","getView","setCenter","enableHighAccuracy","maximumAge","timeout","clearWatch","vectorLayer","source","standardLayer","visible","satelliteLayer","url","maxZoom","target","layers","view","center","zoom","controls","setTarget","undefined","toggleMapView","getLayers","getArray","setVisible","toggleRouteMode","findLocationByName","query","toLowerCase","lowerQuery","exactMatch","find","partialMatch","includes","clearRoutes","features","getFeatures","feature","getGeometry","get","removeFeature","timer","setTimeout","startCoords","endCoords","calculate","profile","format","alternative_routes","target_count","share_factor","instructions","then","response","routes","index","id","summary","distance","properties","duration","geometry","steps","segments","catch","err","clearTimeout","calculateRoute","alert","startPoint","endPoint","startMarker","set","endMarker","extent","Math","min","max","fit","padding","selectedRoute","route","routeFeature","coord","stroke","color","width","lineDash","directions","step","type","instruction","handleStartLocationChange","value","handleEndLocationChange","children","onStartChange","onEndChange","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toFixed","round","ref","role","length","direction","_c","$RefreshReg$"],"sources":["/Users/kenn/Documents/GitHub/AccessibleMapBackup/src/components/AccessibleMap.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport OSM from 'ol/source/OSM';\nimport XYZ from 'ol/source/XYZ';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport LineString from 'ol/geom/LineString';\nimport { fromLonLat } from 'ol/proj';\nimport { Icon, Style, Stroke } from 'ol/style';\nimport { defaults as defaultControls } from 'ol/control';\nimport Openrouteservice from 'openrouteservice-js';\nimport MapSearch from './MapSearch/MapSearch';\nimport 'ol/ol.css';\nimport './AccessibleMap.css';\nimport locationsData from './campuslocations.json';\n\n// OpenRouteService API configuration\nconst orsDirections = new Openrouteservice.Directions({\n  api_key: '5b3ce3597851110001cf6248a1d686e75cef4e86a9782464ccdb71cf',\n});\n\n// Types\nexport interface AccessibleMapProps {\n  className?: string;\n}\n\nexport interface Location {\n  name: string;\n  coordinates: [number, number];\n}\n\ninterface TurnByTurnDirection {\n  type: string;\n  instruction: string;\n  distance: number;\n  duration: number;\n}\n\ninterface RouteOption {\n  steps: any;\n  id: number;\n  summary: string;\n  distance: number; // in meters\n  duration: number; // in seconds\n  coordinates: number[][];\n}\n\n// Constants\nconst INITIAL_CENTER = fromLonLat([-84.5831, 34.0390]);\n\n// Load campus locations from JSON file\nconst campusLocations: Location[] = locationsData.locations.map(loc => ({\n  name: loc.name,\n  coordinates: loc.coordinates as [number, number]\n}));\n\nconst AccessibleMap: React.FC<AccessibleMapProps> = ({ className }) => {\n  const mapRef = useRef<HTMLDivElement | null>(null);\n  const mapInstance = useRef<Map | null>(null);\n  const vectorSourceRef = useRef(new VectorSource());\n  const userMarkerRef = useRef(new Feature());\n  \n  const [viewMode, setViewMode] = useState<'standard' | 'satellite'>('standard');\n  const [startLocation, setStartLocation] = useState('');\n  const [endLocation, setEndLocation] = useState('');\n  const [routeMode, setRouteMode] = useState<'walking' | 'wheelchair'>('walking');\n  const [userLocation, setUserLocation] = useState<number[] | null>(null);\n  const [turnByTurnDirections, setTurnByTurnDirections] = useState<TurnByTurnDirection[]>([]);\n  const [isFlyoutOpen, setIsFlyoutOpen] = useState(false);\n  const [routeOptions, setRouteOptions] = useState<RouteOption[]>([]);\n  const [selectedRouteId, setSelectedRouteId] = useState<number | null>(null);\n\n  // Place accessibility markers on the map\n  const placeMarkers = useCallback(() => {\n    campusLocations.forEach((location) => {\n      const coords = fromLonLat(location.coordinates);\n      const marker = new Feature(new Point(coords));\n\n      marker.setStyle(\n        new Style({\n          image: new Icon({\n            src: 'https://cdn2.iconfinder.com/data/icons/wsd-map-markers-2/512/wsd_markers_97-512.png',\n            scale: 0.04,\n            anchor: [0.5, 1],\n          }),\n        })\n      );\n\n      vectorSourceRef.current.addFeature(marker);\n    });\n  }, []);\n\n  // Start tracking user location\n  const startTracking = useCallback(() => {\n    if (!navigator.geolocation) {\n      console.error('Geolocation is not supported by this browser.');\n      return;\n    }\n\n    const watchId = navigator.geolocation.watchPosition(\n      (position) => {\n        const { latitude, longitude } = position.coords;\n        const lonLat = [longitude, latitude];\n        setUserLocation(lonLat as [number, number]);\n        \n        const coords = fromLonLat(lonLat);\n  \n        // Update marker position\n        userMarkerRef.current.setGeometry(new Point(coords));\n  \n        // Ensure the marker is added only once\n        if (!vectorSourceRef.current.hasFeature(userMarkerRef.current)) {\n          userMarkerRef.current.setStyle(\n            new Style({\n              image: new Icon({\n                src: 'https://cdn-icons-png.flaticon.com/128/884/884094.png',\n                scale: 0.2,\n              }),\n            })\n          );\n          vectorSourceRef.current.addFeature(userMarkerRef.current);\n        }\n  \n        // Follow user location\n        if (mapInstance.current) {\n          mapInstance.current.getView().setCenter(coords);\n        }\n      },\n      (error) => {\n        console.error('Error getting location:', error);\n      },\n      { enableHighAccuracy: true, maximumAge: 0, timeout: 5000 }\n    );\n\n    return () => navigator.geolocation.clearWatch(watchId);\n  }, []);\n\n  // Initialize the map\n  useEffect(() => {\n    if (!mapRef.current) return;\n\n    const vectorLayer = new VectorLayer({ \n      source: vectorSourceRef.current \n    });\n\n    const standardLayer = new TileLayer({ \n      source: new OSM(), \n      visible: true \n    });\n\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        maxZoom: 19,\n      }),\n      visible: false,\n    });\n\n    mapInstance.current = new Map({\n      target: mapRef.current,\n      layers: [standardLayer, satelliteLayer, vectorLayer],\n      view: new View({\n        center: INITIAL_CENTER,\n        zoom: 17,\n        maxZoom: 19,\n      }),\n      controls: defaultControls(),\n    });\n    startTracking();\n    placeMarkers();\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.setTarget(undefined);\n        mapInstance.current = null;\n      }\n    };\n  }, []);\n\n  // Toggle between standard and satellite map views\n  const toggleMapView = useCallback(() => {\n    if (!mapInstance.current) return;\n\n    const layers = mapInstance.current.getLayers().getArray();\n    const standardLayer = layers[0];\n    const satelliteLayer = layers[1];\n\n    if (viewMode === 'standard') {\n      standardLayer.setVisible(false);\n      satelliteLayer.setVisible(true);\n      setViewMode('satellite');\n    } else {\n      standardLayer.setVisible(true);\n      satelliteLayer.setVisible(false);\n      setViewMode('standard');\n    }\n  }, [viewMode]);\n\n  // Toggle between walking and wheelchair route modes\n  const toggleRouteMode = useCallback(() => {\n    setRouteMode(routeMode === 'walking' ? 'wheelchair' : 'walking');\n  }, [routeMode]);\n\n  // Find location coordinates by name\n  const findLocationByName = useCallback((query: string): number[] | null => {\n    if (!query || query.toLowerCase() === 'my location') return null;\n  \n    const lowerQuery = query.toLowerCase();\n  \n    const exactMatch = campusLocations.find(loc => \n      loc.name.toLowerCase() === lowerQuery\n    );\n    if (exactMatch) return exactMatch.coordinates;\n  \n    const partialMatch = campusLocations.find(loc => \n      loc.name.toLowerCase().includes(lowerQuery)\n    );\n    return partialMatch ? partialMatch.coordinates : null;\n  }, []);\n  \n\n  // Clear previous routes from the map\n  const clearRoutes = useCallback(() => {\n    const features = vectorSourceRef.current.getFeatures();\n    features.forEach(feature => {\n      // Remove only route lines and previous start/end markers\n      if (feature.getGeometry() instanceof LineString || feature.get('type') === 'marker') {\n        vectorSourceRef.current.removeFeature(feature);\n      }\n    });\n    setTurnByTurnDirections([]);\n  }, []);\n\n  // Calculate route options when start and end locations are set\n  useEffect(() => {\n    if (!startLocation || !endLocation) {\n      setIsFlyoutOpen(false);\n      setRouteOptions([]);\n      return;\n    }\n\n    const timer = setTimeout(() => {\n      let startCoords;\n      if (startLocation) {\n        // If user entered a start location, use that\n        startCoords = findLocationByName(startLocation);\n      } else if (userLocation) {\n        // If no start location entered, use current user location\n        startCoords = userLocation;\n      } else {\n        return;\n      }\n\n      const endCoords = findLocationByName(endLocation);\n\n      if ((!startLocation && !userLocation) || !endLocation) {\n        setIsFlyoutOpen(false);\n        setRouteOptions([]);\n        return;\n      }\n\n      // Calculate routes\n      orsDirections\n        .calculate({\n          coordinates: [startCoords, endCoords],\n          profile: routeMode === 'wheelchair' ? 'wheelchair' : 'foot-walking',\n          format: 'geojson',\n          alternative_routes: { target_count: 3, share_factor: 0.6 },\n          instructions: true\n        })\n        .then((response: any) => {\n          const routes = response.features.map((feature: any, index: number) => ({\n            id: index,\n            summary: `Route ${index + 1}`,\n            distance: feature.properties.summary.distance,\n            duration: feature.properties.summary.duration,\n            coordinates: feature.geometry.coordinates,\n            steps: feature.properties.segments[0].steps\n          }));\n          setRouteOptions(routes);\n          setIsFlyoutOpen(true);\n          setSelectedRouteId(0); // Default to first route\n        })\n        .catch((err: Error) => {\n          console.error('Route calculation error:', err);\n          setIsFlyoutOpen(false);\n          setRouteOptions([]);\n        });\n    }, 500); // 500ms debounce\n\n    return () => clearTimeout(timer);\n  }, [startLocation, endLocation, routeMode, findLocationByName, userLocation]);\n\n\n\n\n  // Calculate and display the selected route\n  const calculateRoute = useCallback(() => {\n  if (!endLocation) {\n    alert('Please enter a valid destination.');\n    return;\n  }\n\n  let startCoords = userLocation; // Default to user's location\n  if (startLocation && startLocation.toLowerCase() !== 'my location') {\n    startCoords = findLocationByName(startLocation);\n  }\n\n  const endCoords = findLocationByName(endLocation);\n\n  if (!startCoords || !endCoords) {\n    alert('Unable to determine locations. Please enter valid locations.');\n    return;\n  }\n\n  // Convert coordinates to OpenLayers format\n  const startPoint = fromLonLat(startCoords);\n  const endPoint = fromLonLat(endCoords);\n\n  // Create start marker\n  const startMarker = new Feature(new Point(startPoint));\n  startMarker.setStyle(\n    new Style({\n      image: new Icon({\n        src: 'https://cdn-icons-png.flaticon.com/128/7976/7976202.png',\n        scale: 0.2,\n        anchor: [0.5, 1],\n      }),\n    })\n  );\n  startMarker.set('type', 'marker');\n\n  // Create end marker\n  const endMarker = new Feature(new Point(endPoint));\n  endMarker.setStyle(\n    new Style({\n      image: new Icon({\n        src: 'https://cdn-icons-png.flaticon.com/128/9131/9131546.png',\n        scale: 0.2,\n        anchor: [0.5, 1],\n      }),\n    })\n  );\n  endMarker.set('type', 'marker');\n\n  // Add markers to the vector source\n  vectorSourceRef.current.addFeature(startMarker);\n  vectorSourceRef.current.addFeature(endMarker);\n\n  // Zoom to fit both markers\n  if (mapInstance.current) {\n    const extent = [\n      Math.min(startPoint[0], endPoint[0]),\n      Math.min(startPoint[1], endPoint[1]),\n      Math.max(startPoint[0], endPoint[0]),\n      Math.max(startPoint[1], endPoint[1]),\n    ];\n\n    mapInstance.current.getView().fit(extent, {\n      padding: [50, 50, 50, 50],\n      duration: 1000,\n      maxZoom: 18,\n    });\n  }\n\n  // Display the selected route\n  const selectedRoute = routeOptions.find((route) => route.id === selectedRouteId);\n  if (selectedRoute) {\n    const routeFeature = new Feature({\n      geometry: new LineString(\n        selectedRoute.coordinates.map((coord: number[]) => fromLonLat(coord))\n      ),\n    });\n\n    routeFeature.setStyle(\n      new Style({\n        stroke: new Stroke({\n          color: routeMode === 'wheelchair' ? '#4287f5' : '#2563eb',\n          width: 4,\n          lineDash: routeMode === 'wheelchair' ? [5, 5] : undefined,\n        }),\n      })\n    );\n\n    vectorSourceRef.current.addFeature(routeFeature);\n\n    // Set turn-by-turn directions\n    if (selectedRoute.steps) {\n      const directions: TurnByTurnDirection[] = selectedRoute.steps.map((step: any) => ({\n        type: step.type,\n        instruction: step.instruction,\n        distance: step.distance,\n        duration: step.duration\n      }));\n\n      setTurnByTurnDirections(directions);\n    }\n  }\n\n  setIsFlyoutOpen(false);\n}, [startLocation, endLocation, selectedRouteId, routeOptions, clearRoutes, findLocationByName, userLocation, routeMode]);\n\n\n  // Handle changing locations\n  const handleStartLocationChange = useCallback((value: string) => {\n    setStartLocation(value);\n  }, []);\n\n  const handleEndLocationChange = useCallback((value: string) => {\n    setEndLocation(value);\n  }, []);\n\n  return (\n    <div className=\"map-wrapper\">\n      <div className=\"map-page\">\n        <div className=\"top-bar\">\n          <div className=\"search-container\">\n            <MapSearch \n              onStartChange={handleStartLocationChange}\n              onEndChange={handleEndLocationChange}\n              onSubmit={calculateRoute}\n              locations={campusLocations}\n            />\n            <div className=\"route-controls\">\n              <button \n                type=\"button\" \n                onClick={calculateRoute}\n                className=\"find-route-button\"\n                aria-label=\"Find route\"\n              >\n                GO\n              </button>\n              <button\n                type=\"button\"\n                onClick={toggleRouteMode}\n                className={`route-mode-toggle ${routeMode === 'wheelchair' ? 'wheelchair-active' : ''}`}\n                aria-label={`Switch to ${routeMode === 'wheelchair' ? 'standard walking' : 'wheelchair'} route`}\n              >\n                {routeMode === 'wheelchair' ? ' 🦽 Wheelchair' : ' 🚶 Walking'}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"map-content\">\n          {isFlyoutOpen && (\n            <div className=\"route-flyout\">\n              <h2>Route Options</h2>\n              {routeOptions.map((route) => (\n                <div\n                  key={route.id}\n                  className={`route-option ${selectedRouteId === route.id ? 'selected' : ''}`}\n                  onClick={() => setSelectedRouteId(route.id)}\n                >\n                  <h3>{route.summary}</h3>\n                  <p>Distance: {(route.distance / 1000).toFixed(2)} km</p>\n                  <p>Duration: {Math.round(route.duration / 60)} minutes</p>\n                </div>\n              ))}\n              <button \n                type=\"button\" \n                onClick={calculateRoute}\n                className=\"select-route-button\"\n                aria-label=\"Select this route\"\n              >\n                Use Selected Route\n              </button>\n            </div>\n          )}\n\n          <div className={`map-root ${className || ''} ${isFlyoutOpen ? 'shifted' : ''}`}>\n            <div \n              ref={mapRef} \n              className=\"map-container\" \n              role=\"application\"\n              aria-label=\"Interactive map displaying user location and navigation\"\n            />\n            <div className=\"map-controls\">\n              <button\n                type=\"button\"\n                onClick={toggleMapView}\n                className=\"map-toggle-button\"\n              >\n                {viewMode === 'standard' ? 'Satellite View' : 'Standard View'}\n              </button>\n            </div>\n          </div>\n      </div>\n        {turnByTurnDirections.length > 0 && (\n          <div className=\"turn-by-turn-directions\">\n            <h3>Turn-by-Turn Directions</h3>\n            <ul>\n              {turnByTurnDirections.map((direction, index) => (\n                <li key={index}>\n                  {direction.instruction} \n                  <span className=\"direction-details\">\n                    (Distance: {(direction.distance / 1).toFixed(1)} m, \n                    Duration: {(direction.duration / 60).toFixed(1)} min)\n                  </span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AccessibleMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}