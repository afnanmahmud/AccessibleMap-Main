{"ast":null,"code":"const constants = {\n  defaultAPIVersion: \"v2\",\n  defaultHost: \"https://api.openrouteservice.org\",\n  missingAPIKeyMsg: \"Please add your openrouteservice api_key..\",\n  baseUrlConstituents: [\"host\", \"service\", \"api_version\", \"mime_type\"],\n  propNames: {\n    apiKey: \"api_key\",\n    host: \"host\",\n    service: \"service\",\n    apiVersion: \"api_version\",\n    mimeType: \"mime_type\",\n    profile: \"profile\",\n    format: \"format\",\n    timeout: \"timeout\"\n  }\n};\nclass OrsUtil {\n  fillArgs(defaultArgs, requestArgs) {\n    requestArgs = {\n      ...defaultArgs,\n      ...requestArgs\n    };\n    return requestArgs;\n  }\n  saveArgsToCache(args) {\n    return {\n      host: args[constants.propNames.host],\n      api_version: args[constants.propNames.apiVersion],\n      profile: args[constants.propNames.profile],\n      format: args[constants.propNames.format],\n      service: args[constants.propNames.service],\n      api_key: args[constants.propNames.apiKey],\n      mime_type: args[constants.propNames.mimeType]\n    };\n  }\n  prepareRequest(args) {\n    delete args[constants.propNames.mimeType];\n    delete args[constants.propNames.host];\n    delete args[constants.propNames.apiVersion];\n    delete args[constants.propNames.service];\n    delete args[constants.propNames.apiKey];\n    delete args[constants.propNames.profile];\n    delete args[constants.propNames.format];\n    delete args[constants.propNames.timeout];\n    return {\n      ...args\n    };\n  }\n  /**\n   * Prepare the request url based on url constituents\n   * @param {Object} args\n   * @return {string} url\n   */\n  prepareUrl(args) {\n    let url = args[constants.propNames.host];\n    let urlPathParts = [args[constants.propNames.apiVersion], args[constants.propNames.service], args[constants.propNames.profile], args[constants.propNames.format]];\n    urlPathParts = urlPathParts.join(\"/\");\n    urlPathParts = urlPathParts.replace(/\\/(\\/)+/g, \"/\");\n    if (urlPathParts[0] === \"/\") {\n      urlPathParts = urlPathParts.slice(1);\n    }\n    let end = urlPathParts.slice(-1);\n    if (end[0] === \"/\") {\n      urlPathParts = urlPathParts.slice(0, -1);\n    }\n    url = url + \"/\" + urlPathParts;\n    return url;\n  }\n}\nconst orsUtil$4 = new OrsUtil();\nclass OrsBase {\n  constructor(args) {\n    this.defaultArgs = {};\n    this.requestArgs = {};\n    this.argsCache = null;\n    this.customHeaders = {};\n    this._setRequestDefaults(args);\n  }\n  /**\n   * Set defaults for a request comparing with and overwriting default class arguments\n   * @param {Object} args - constructor input\n   */\n  _setRequestDefaults(args) {\n    this.defaultArgs[constants.propNames.host] = constants.defaultHost;\n    if (args[constants.propNames.host]) {\n      this.defaultArgs[constants.propNames.host] = args[constants.propNames.host];\n    }\n    if (args[constants.propNames.service]) {\n      this.defaultArgs[constants.propNames.service] = args[constants.propNames.service];\n    }\n    if (args[constants.propNames.timeout]) {\n      this.defaultArgs[constants.propNames.timeout] = args[constants.propNames.timeout];\n    }\n    if (constants.propNames.apiKey in args) {\n      this.defaultArgs[constants.propNames.apiKey] = args[constants.propNames.apiKey];\n    } else if (!args[constants.propNames.host]) {\n      console.error(constants.missingAPIKeyMsg);\n      throw new Error(constants.missingAPIKeyMsg);\n    }\n  }\n  checkHeaders() {\n    if (this.requestArgs.customHeaders) {\n      this.customHeaders = this.requestArgs.customHeaders;\n      delete this.requestArgs.customHeaders;\n    }\n    if (!(\"Content-type\" in this.customHeaders)) {\n      this.customHeaders = {\n        ...this.customHeaders,\n        \"Content-type\": \"application/json\"\n      };\n    }\n  }\n  async fetchRequest(body, controller) {\n    let url = orsUtil$4.prepareUrl(this.argsCache);\n    if (this.argsCache[constants.propNames.service] === \"pois\") {\n      url += url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n    }\n    const authorization = {\n      \"Authorization\": this.argsCache[constants.propNames.apiKey]\n    };\n    return await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      headers: {\n        ...authorization,\n        ...this.customHeaders\n      },\n      signal: controller.signal\n    });\n  }\n  async createRequest(body) {\n    var _a;\n    const controller = new AbortController();\n    const timeout = setTimeout(() => controller.abort(), this.defaultArgs[constants.propNames.timeout] || 5e3);\n    try {\n      const orsResponse = await this.fetchRequest(body, controller);\n      if (!orsResponse.ok) {\n        const error = new Error(orsResponse.statusText);\n        error.status = orsResponse.status;\n        error.response = orsResponse;\n        throw error;\n      }\n      return ((_a = this.argsCache) == null ? void 0 : _a.format) === \"gpx\" ? await orsResponse.text() : await orsResponse.json();\n    } finally {\n      clearTimeout(timeout);\n    }\n  }\n  // is overridden in Directions and Isochrones class\n  getBody() {\n    return this.httpArgs;\n  }\n  async calculate(reqArgs) {\n    this.requestArgs = reqArgs;\n    this.checkHeaders();\n    this.requestArgs = orsUtil$4.fillArgs(this.defaultArgs, this.requestArgs);\n    this.argsCache = orsUtil$4.saveArgsToCache(this.requestArgs);\n    this.httpArgs = orsUtil$4.prepareRequest(this.requestArgs);\n    const postBody = this.getBody(this.httpArgs);\n    return await this.createRequest(postBody);\n  }\n}\nconst orsUtil$3 = new OrsUtil();\nclass OrsGeocode extends OrsBase {\n  constructor(args) {\n    super(args);\n    this.lookupParameter = {\n      api_key: function (key, val) {\n        return key + \"=\" + val;\n      },\n      text: function (key, val) {\n        return \"&\" + key + \"=\" + encodeURIComponent(val);\n      },\n      focus_point: function (key, val) {\n        let urlParams = \"\";\n        urlParams += \"&focus.point.lon=\" + val[1];\n        urlParams += \"&focus.point.lat=\" + val[0];\n        return urlParams;\n      },\n      boundary_bbox: function (key, val) {\n        let urlParams = \"\";\n        urlParams += \"&boundary.rect.min_lon=\" + val[0][1];\n        urlParams += \"&boundary.rect.min_lat=\" + val[0][0];\n        urlParams += \"&boundary.rect.max_lon=\" + val[1][1];\n        urlParams += \"&boundary.rect.max_lat=\" + val[1][0];\n        return urlParams;\n      },\n      point: function (key, val) {\n        if (val && Array.isArray(val.lat_lng)) {\n          let urlParams = \"\";\n          urlParams += \"&point.lon=\" + val.lat_lng[1];\n          urlParams += \"&point.lat=\" + val.lat_lng[0];\n          return urlParams;\n        }\n      },\n      boundary_circle: function (key, val) {\n        let urlParams = \"\";\n        urlParams += \"&boundary.circle.lon=\" + val.lat_lng[1];\n        urlParams += \"&boundary.circle.lat=\" + val.lat_lng[0];\n        urlParams += \"&boundary.circle.radius=\" + val.radius;\n        return urlParams;\n      },\n      sources: function (key, val) {\n        let urlParams = \"&sources=\";\n        if (val) {\n          for (const key2 in val) {\n            if (Number(key2) > 0) {\n              urlParams += \",\";\n            }\n            urlParams += val[key2];\n          }\n          return urlParams;\n        }\n      },\n      layers: function (key, val) {\n        let urlParams = \"&layers=\";\n        let counter = 0;\n        for (key in val) {\n          if (counter > 0) {\n            urlParams += \",\";\n          }\n          urlParams += val[key];\n          counter++;\n        }\n        return urlParams;\n      },\n      boundary_country: function (key, val) {\n        return \"&boundary.country=\" + val;\n      },\n      size: function (key, val) {\n        return \"&\" + key + \"=\" + val;\n      },\n      address: function (key, val) {\n        return \"&\" + key + \"=\" + val;\n      },\n      neighbourhood: function (key, val) {\n        return \"&\" + key + \"=\" + val;\n      },\n      borough: function (key, val) {\n        return \"&\" + key + \"=\" + val;\n      },\n      locality: function (key, val) {\n        return \"&\" + key + \"=\" + val;\n      },\n      county: function (key, val) {\n        return \"&\" + key + \"=\" + val;\n      },\n      region: function (key, val) {\n        return \"&\" + key + \"=\" + val;\n      },\n      postalcode: function (key, val) {\n        return \"&\" + key + \"=\" + val;\n      },\n      country: function (key, val) {\n        return \"&\" + key + \"=\" + val;\n      }\n    };\n  }\n  getParametersAsQueryString(args) {\n    let queryString = \"\";\n    for (const key in args) {\n      const val = args[key];\n      if (constants.baseUrlConstituents.indexOf(key) <= -1) {\n        queryString += this.lookupParameter[key](key, val);\n      }\n    }\n    return queryString;\n  }\n  async fetchGetRequest(controller) {\n    let url = orsUtil$3.prepareUrl(this.requestArgs);\n    url += \"?\" + this.getParametersAsQueryString(this.requestArgs);\n    return await fetch(url, {\n      method: \"GET\",\n      headers: this.customHeaders,\n      signal: controller.signal\n    });\n  }\n  async geocodePromise() {\n    const controller = new AbortController();\n    const timeout = setTimeout(() => controller.abort(), this.defaultArgs[constants.propNames.timeout] || 5e3);\n    try {\n      const orsResponse = await this.fetchGetRequest(controller);\n      if (!orsResponse.ok) {\n        const error = new Error(orsResponse.statusText);\n        error.status = orsResponse.status;\n        error.response = orsResponse;\n        throw error;\n      }\n      return (await orsResponse.json()) || orsResponse.text();\n    } finally {\n      clearTimeout(timeout);\n    }\n  }\n  async geocode(reqArgs) {\n    this.requestArgs = reqArgs;\n    this.checkHeaders();\n    if (!this.defaultArgs[constants.propNames.service] && !this.requestArgs[constants.propNames.service]) {\n      this.requestArgs.service = \"geocode/search\";\n    }\n    this.requestArgs = orsUtil$3.fillArgs(this.defaultArgs, this.requestArgs);\n    return await this.geocodePromise();\n  }\n  async reverseGeocode(reqArgs) {\n    this.requestArgs = reqArgs;\n    this.checkHeaders();\n    if (!this.defaultArgs[constants.propNames.service] && !this.requestArgs[constants.propNames.service]) {\n      this.requestArgs.service = \"geocode/reverse\";\n    }\n    this.requestArgs = orsUtil$3.fillArgs(this.defaultArgs, this.requestArgs);\n    return await this.geocodePromise();\n  }\n  async structuredGeocode(reqArgs) {\n    this.requestArgs = reqArgs;\n    this.checkHeaders();\n    if (!this.defaultArgs[constants.propNames.service] && !this.requestArgs[constants.propNames.service]) {\n      this.requestArgs.service = \"geocode/search/structured\";\n    }\n    this.requestArgs = orsUtil$3.fillArgs(this.defaultArgs, this.requestArgs);\n    return await this.geocodePromise();\n  }\n}\nclass OrsIsochrones extends OrsBase {\n  constructor(args) {\n    super(args);\n    if (!this.defaultArgs[constants.propNames.service] && !this.requestArgs[constants.propNames.service]) {\n      this.defaultArgs.service = \"isochrones\";\n    }\n    if (!args[constants.propNames.apiVersion]) {\n      this.defaultArgs.api_version = constants.defaultAPIVersion;\n    }\n  }\n  getBody(args) {\n    const options = {};\n    if (args.restrictions) {\n      options.profile_params = {\n        restrictions: {\n          ...args.restrictions\n        }\n      };\n      delete args.restrictions;\n    }\n    if (args.avoidables) {\n      options.avoid_features = [...args.avoidables];\n      delete args.avoidables;\n    }\n    if (args.avoid_polygons) {\n      options.avoid_polygons = {\n        ...args.avoid_polygons\n      };\n      delete args.avoid_polygons;\n    }\n    if (Object.keys(options).length > 0) {\n      return {\n        ...args,\n        options\n      };\n    } else {\n      return {\n        ...args\n      };\n    }\n  }\n}\nclass OrsMatrix extends OrsBase {\n  constructor(args) {\n    super(args);\n    if (!this.defaultArgs[constants.propNames.service] && !this.requestArgs[constants.propNames.service]) {\n      this.defaultArgs[constants.propNames.service] = \"matrix\";\n    }\n    if (!args[constants.propNames.apiVersion]) {\n      this.defaultArgs.api_version = constants.defaultAPIVersion;\n    }\n  }\n}\nclass OrsDirections extends OrsBase {\n  constructor(args) {\n    super(args);\n    if (!this.defaultArgs[constants.propNames.service]) {\n      this.defaultArgs[constants.propNames.service] = \"directions\";\n    }\n    if (!args[constants.propNames.apiVersion]) {\n      this.defaultArgs.api_version = constants.defaultAPIVersion;\n    }\n  }\n  getBody(args) {\n    if (args.options && typeof args.options !== \"object\") {\n      args.options = JSON.parse(args.options);\n    }\n    if (args.restrictions) {\n      args.options = args.options || {};\n      args.options.profile_params = {\n        restrictions: {\n          ...args.restrictions\n        }\n      };\n      delete args.restrictions;\n    }\n    if (args.avoidables) {\n      args.options = args.options || {};\n      args.options.avoid_features = [...args.avoidables];\n      delete args.avoidables;\n    }\n    return args;\n  }\n}\nconst orsUtil$2 = new OrsUtil();\nclass OrsPois extends OrsBase {\n  constructor(args) {\n    super(args);\n    if (!this.defaultArgs[constants.propNames.service]) {\n      this.defaultArgs[constants.propNames.service] = \"pois\";\n    }\n  }\n  generatePayload(args) {\n    const payload = {};\n    for (const key in args) {\n      if (!(constants.baseUrlConstituents.indexOf(key) > -1 || key === constants.propNames.apiKey || key === constants.propNames.timeout)) {\n        payload[key] = args[key];\n      }\n    }\n    return payload;\n  }\n  async poisPromise() {\n    this.requestArgs.request = this.requestArgs.request || \"pois\";\n    this.argsCache = orsUtil$2.saveArgsToCache(this.requestArgs);\n    if (this.requestArgs[constants.propNames.service]) {\n      delete this.requestArgs[constants.propNames.service];\n    }\n    const payload = this.generatePayload(this.requestArgs);\n    return await this.createRequest(payload);\n  }\n  async pois(reqArgs) {\n    this.requestArgs = reqArgs;\n    this.checkHeaders();\n    this.requestArgs = orsUtil$2.fillArgs(this.defaultArgs, this.requestArgs);\n    return await this.poisPromise();\n  }\n}\nconst orsUtil$1 = new OrsUtil();\nclass OrsElevation extends OrsBase {\n  generatePayload(args) {\n    const payload = {};\n    for (const key in args) {\n      if (constants.baseUrlConstituents.indexOf(key) <= -1) {\n        payload[key] = args[key];\n      }\n    }\n    return payload;\n  }\n  async elevationPromise() {\n    this.argsCache = orsUtil$1.saveArgsToCache(this.requestArgs);\n    const payload = this.generatePayload(this.requestArgs);\n    return await this.createRequest(payload);\n  }\n  async lineElevation(reqArgs) {\n    this.requestArgs = reqArgs;\n    this.checkHeaders();\n    if (!this.defaultArgs[constants.propNames.service] && !this.requestArgs[constants.propNames.service]) {\n      this.requestArgs[constants.propNames.service] = \"elevation/line\";\n    }\n    this.requestArgs = orsUtil$1.fillArgs(this.defaultArgs, this.requestArgs);\n    return await this.elevationPromise();\n  }\n  async pointElevation(reqArgs) {\n    this.requestArgs = reqArgs;\n    this.checkHeaders();\n    if (!this.defaultArgs[constants.propNames.service] && !this.requestArgs[constants.propNames.service]) {\n      this.requestArgs[constants.propNames.service] = \"elevation/point\";\n    }\n    this.requestArgs = orsUtil$1.fillArgs(this.defaultArgs, this.requestArgs);\n    return await this.elevationPromise();\n  }\n}\nconst orsUtil = new OrsUtil();\nclass OrsOptimization extends OrsBase {\n  generatePayload(args) {\n    let payload = {};\n    for (const key in args) {\n      if (constants.baseUrlConstituents.indexOf(key) <= -1) {\n        payload[key] = args[key];\n      }\n    }\n    return payload;\n  }\n  async optimizationPromise() {\n    this.argsCache = orsUtil.saveArgsToCache(this.requestArgs);\n    const payload = this.generatePayload(this.requestArgs);\n    return await this.createRequest(payload);\n  }\n  async optimize(reqArgs) {\n    this.requestArgs = reqArgs;\n    this.checkHeaders();\n    if (!this.defaultArgs[constants.propNames.service] && !reqArgs[constants.propNames.service]) {\n      reqArgs[constants.propNames.service] = \"optimization\";\n    }\n    this.requestArgs = orsUtil.fillArgs(this.defaultArgs, this.requestArgs);\n    return await this.optimizationPromise();\n  }\n}\nclass OrsSnap extends OrsBase {\n  constructor(args) {\n    super(args);\n    if (!this.defaultArgs[constants.propNames.service] && !this.requestArgs[constants.propNames.service]) {\n      this.defaultArgs[constants.propNames.service] = \"snap\";\n    }\n    if (!args[constants.propNames.apiVersion]) {\n      this.defaultArgs.api_version = constants.defaultAPIVersion;\n    }\n  }\n}\nconst Openrouteservice = {\n  Geocode: OrsGeocode,\n  Isochrones: OrsIsochrones,\n  Directions: OrsDirections,\n  Matrix: OrsMatrix,\n  Pois: OrsPois,\n  Elevation: OrsElevation,\n  Optimization: OrsOptimization,\n  Snap: OrsSnap\n};\nif (typeof module === \"object\" && typeof module.exports === \"object\") {\n  module.exports = Openrouteservice;\n} else if (typeof define === \"function\" && define.amd) {\n  define(Openrouteservice);\n}\nif (typeof window !== \"undefined\") {\n  window.Openrouteservice = Openrouteservice;\n}\nexport { Openrouteservice as default };","map":{"version":3,"names":["constants","defaultAPIVersion","defaultHost","missingAPIKeyMsg","baseUrlConstituents","propNames","apiKey","host","service","apiVersion","mimeType","profile","format","timeout","OrsUtil","fillArgs","defaultArgs","requestArgs","saveArgsToCache","args","api_version","api_key","mime_type","prepareRequest","prepareUrl","url","urlPathParts","join","replace","slice","end","orsUtil$4","OrsBase","constructor","argsCache","customHeaders","_setRequestDefaults","console","error","Error","checkHeaders","fetchRequest","body","controller","indexOf","authorization","fetch","method","JSON","stringify","headers","signal","createRequest","_a","AbortController","setTimeout","abort","orsResponse","ok","statusText","status","response","text","json","clearTimeout","getBody","httpArgs","calculate","reqArgs","postBody","orsUtil$3","OrsGeocode","lookupParameter","key","val","encodeURIComponent","focus_point","urlParams","boundary_bbox","point","Array","isArray","lat_lng","boundary_circle","radius","sources","key2","Number","layers","counter","boundary_country","size","address","neighbourhood","borough","locality","county","region","postalcode","country","getParametersAsQueryString","queryString","fetchGetRequest","geocodePromise","geocode","reverseGeocode","structuredGeocode","OrsIsochrones","options","restrictions","profile_params","avoidables","avoid_features","avoid_polygons","Object","keys","length","OrsMatrix","OrsDirections","parse","orsUtil$2","OrsPois","generatePayload","payload","poisPromise","request","pois","orsUtil$1","OrsElevation","elevationPromise","lineElevation","pointElevation","orsUtil","OrsOptimization","optimizationPromise","optimize","OrsSnap","Openrouteservice","Geocode","Isochrones","Directions","Matrix","Pois","Elevation","Optimization","Snap","module","exports","define","amd","window"],"sources":["/Users/isaacmwesigwa/accessible-map/node_modules/openrouteservice-js/src/constants.js","/Users/isaacmwesigwa/accessible-map/node_modules/openrouteservice-js/src/OrsUtil.js","/Users/isaacmwesigwa/accessible-map/node_modules/openrouteservice-js/src/OrsBase.js","/Users/isaacmwesigwa/accessible-map/node_modules/openrouteservice-js/src/OrsGeocode.js","/Users/isaacmwesigwa/accessible-map/node_modules/openrouteservice-js/src/OrsIsochrones.js","/Users/isaacmwesigwa/accessible-map/node_modules/openrouteservice-js/src/OrsMatrix.js","/Users/isaacmwesigwa/accessible-map/node_modules/openrouteservice-js/src/OrsDirections.js","/Users/isaacmwesigwa/accessible-map/node_modules/openrouteservice-js/src/OrsPois.js","/Users/isaacmwesigwa/accessible-map/node_modules/openrouteservice-js/src/OrsElevation.js","/Users/isaacmwesigwa/accessible-map/node_modules/openrouteservice-js/src/OrsOptimization.js","/Users/isaacmwesigwa/accessible-map/node_modules/openrouteservice-js/src/OrsSnap.js","/Users/isaacmwesigwa/accessible-map/node_modules/openrouteservice-js/src/index.js"],"sourcesContent":["const constants = {\n  defaultAPIVersion: 'v2',\n  defaultHost: 'https://api.openrouteservice.org',\n  missingAPIKeyMsg: 'Please add your openrouteservice api_key..',\n  baseUrlConstituents: ['host', 'service', 'api_version', 'mime_type'],\n  propNames: {\n    apiKey: 'api_key',\n    host: 'host',\n    service: 'service',\n    apiVersion: 'api_version',\n    mimeType: 'mime_type',\n    profile: 'profile',\n    format: 'format',\n    timeout: 'timeout'\n  }\n}\n\nexport default constants\n","import Constants from './constants.js'\nclass OrsUtil {\n  fillArgs(defaultArgs, requestArgs) {\n    requestArgs = {...defaultArgs, ...requestArgs}\n    return requestArgs\n  }\n\n  saveArgsToCache(args) {\n    return {\n      host: args[Constants.propNames.host],\n      api_version: args[Constants.propNames.apiVersion],\n      profile: args[Constants.propNames.profile],\n      format: args[Constants.propNames.format],\n      service: args[Constants.propNames.service],\n      api_key: args[Constants.propNames.apiKey],\n      mime_type: args[Constants.propNames.mimeType]\n    }\n  }\n\n  prepareRequest(args) {\n    delete args[Constants.propNames.mimeType]\n    delete args[Constants.propNames.host]\n    delete args[Constants.propNames.apiVersion]\n    delete args[Constants.propNames.service]\n    delete args[Constants.propNames.apiKey]\n    delete args[Constants.propNames.profile]\n    delete args[Constants.propNames.format]\n    delete args[Constants.propNames.timeout]\n    return { ...args }\n  }\n\n  /**\n   * Prepare the request url based on url constituents\n   * @param {Object} args\n   * @return {string} url\n   */\n  prepareUrl(args) {\n    let url = args[Constants.propNames.host]\n    let urlPathParts = [\n      args[Constants.propNames.apiVersion],\n      args[Constants.propNames.service],\n      args[Constants.propNames.profile],\n      args[Constants.propNames.format]\n    ]\n\n    urlPathParts = urlPathParts.join('/')\n    urlPathParts = urlPathParts.replace(/\\/(\\/)+/g, '/')\n\n    // The beginning and end of urlPathParts can not be a slash\n    if (urlPathParts[0] === '/') {\n      urlPathParts = urlPathParts.slice(1)\n    }\n    let end = urlPathParts.slice(-1)\n    if (end[0] === '/') {\n      urlPathParts = urlPathParts.slice(0, -1)\n    }\n\n    url = url + '/' + urlPathParts\n\n    return url\n  }\n}\n\nexport default OrsUtil\n","import OrsUtil from './OrsUtil.js'\nimport Constants from './constants.js'\n\nconst orsUtil = new OrsUtil()\n\nclass OrsBase {\n  constructor(args) {\n    this.defaultArgs = {}\n    this.requestArgs = {}\n    this.argsCache = null\n    this.customHeaders = {}\n\n    this._setRequestDefaults(args)\n  }\n\n  /**\n   * Set defaults for a request comparing with and overwriting default class arguments\n   * @param {Object} args - constructor input\n   */\n  _setRequestDefaults(args) {\n    this.defaultArgs[Constants.propNames.host] = Constants.defaultHost\n    if (args[Constants.propNames.host]) {\n      this.defaultArgs[Constants.propNames.host] = args[Constants.propNames.host]\n    }\n    if (args[Constants.propNames.service]) {\n      this.defaultArgs[Constants.propNames.service] = args[Constants.propNames.service]\n    }\n    if (args[Constants.propNames.timeout]) {\n      this.defaultArgs[Constants.propNames.timeout] = args[Constants.propNames.timeout]\n    }\n    if (Constants.propNames.apiKey in args) {\n      this.defaultArgs[Constants.propNames.apiKey] = args[Constants.propNames.apiKey]\n    } else if (!args[Constants.propNames.host]) {\n      // Do not error if a host is specified; useful for locally-run instances of ORS\n      console.error(Constants.missingAPIKeyMsg)\n      throw new Error(Constants.missingAPIKeyMsg)\n    }\n  }\n\n  checkHeaders() {\n    // Get custom header and remove from args\n    if (this.requestArgs.customHeaders) {\n      this.customHeaders = this.requestArgs.customHeaders\n      delete this.requestArgs.customHeaders\n    }\n    // set default Content-type, since Postman sets Content-type to text/plain if not specified\n    if (!('Content-type' in this.customHeaders)) {\n      this.customHeaders = {...this.customHeaders, 'Content-type': 'application/json'}\n    }\n  }\n\n  async fetchRequest(body, controller) {\n    let url = orsUtil.prepareUrl(this.argsCache)\n    if (this.argsCache[Constants.propNames.service] === 'pois') {\n      url += url.indexOf('?') > -1 ? '&' : '?'\n    }\n\n    const authorization = {'Authorization': this.argsCache[Constants.propNames.apiKey]}\n\n    return await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: {...authorization, ...this.customHeaders},\n      signal: controller.signal\n    })\n  }\n\n  async createRequest(body) {\n    const controller = new AbortController()\n    const timeout = setTimeout(() => controller.abort(), this.defaultArgs[Constants.propNames.timeout] || 5000)\n\n    try {\n      const orsResponse = await this.fetchRequest(body, controller)\n\n      if (!orsResponse.ok) {\n        const error = new Error(orsResponse.statusText)\n        error.status = orsResponse.status\n        error.response = orsResponse\n        throw error\n      }\n\n      return this.argsCache?.format === 'gpx' ? await orsResponse.text() : await orsResponse.json()\n    } finally {\n      clearTimeout(timeout)\n    }\n  }\n\n  // is overridden in Directions and Isochrones class\n  getBody() {\n    return this.httpArgs;\n  }\n\n  async calculate(reqArgs) {\n    this.requestArgs = reqArgs\n\n    this.checkHeaders()\n\n    this.requestArgs = orsUtil.fillArgs(this.defaultArgs, this.requestArgs)\n\n    this.argsCache = orsUtil.saveArgsToCache(this.requestArgs)\n\n    this.httpArgs = orsUtil.prepareRequest(this.requestArgs)\n    const postBody = this.getBody(this.httpArgs)\n\n    return await this.createRequest(postBody)\n  }\n}\n\nexport default OrsBase\n","import OrsUtil from './OrsUtil.js'\nimport Constants from './constants.js'\nimport OrsBase from './OrsBase.js'\n\nconst orsUtil = new OrsUtil()\n\nclass OrsGeocode extends OrsBase {\n  constructor(args) {\n    super(args)\n\n    this.lookupParameter = {\n      api_key: function(key, val) {\n        return key + '=' + val\n      },\n      text: function(key, val) {\n        return '&' + key + '=' + encodeURIComponent(val)\n      },\n      focus_point: function(key, val) {\n        let urlParams = ''\n        urlParams += '&' + 'focus.point.lon' + '=' + val[1]\n        urlParams += '&' + 'focus.point.lat' + '=' + val[0]\n        return urlParams\n      },\n      boundary_bbox: function(key, val) {\n        let urlParams = ''\n        urlParams += '&' + 'boundary.rect.min_lon' + '=' + val[0][1]\n        urlParams += '&' + 'boundary.rect.min_lat' + '=' + val[0][0]\n        urlParams += '&' + 'boundary.rect.max_lon' + '=' + val[1][1]\n        urlParams += '&' + 'boundary.rect.max_lat' + '=' + val[1][0]\n\n        return urlParams\n      },\n      point: function(key, val) {\n        if (val && Array.isArray(val.lat_lng)) {\n          let urlParams = ''\n          urlParams += '&' + 'point.lon' + '=' + val.lat_lng[1]\n          urlParams += '&' + 'point.lat' + '=' + val.lat_lng[0]\n          return urlParams\n        }\n      },\n      boundary_circle: function(key, val) {\n        let urlParams = ''\n        urlParams += '&' + 'boundary.circle.lon' + '=' + val.lat_lng[1]\n        urlParams += '&' + 'boundary.circle.lat' + '=' + val.lat_lng[0]\n        urlParams += '&' + 'boundary.circle.radius' + '=' + val.radius\n\n        return urlParams\n      },\n      sources: function(key, val) {\n        let urlParams = '&sources='\n        if (val) {\n          for (const key in val) {\n            if (Number(key) > 0) {\n              urlParams += ','\n            }\n            urlParams += val[key]\n          }\n          return urlParams\n        }\n      },\n      layers: function(key, val) {\n        let urlParams = '&layers='\n        let counter = 0\n        for (key in val) {\n          if (counter > 0) {\n            urlParams += ','\n          }\n          urlParams += val[key]\n          counter++\n        }\n        return urlParams\n      },\n      boundary_country: function(key, val) {\n        return '&' + 'boundary.country' + '=' + val\n      },\n      size: function(key, val) {\n        return '&' + key + '=' + val\n      },\n      address: function(key, val) {\n        return '&' + key + '=' + val\n      },\n      neighbourhood: function(key, val) {\n        return '&' + key + '=' + val\n      },\n      borough: function(key, val) {\n        return '&' + key + '=' + val\n      },\n      locality: function(key, val) {\n        return '&' + key + '=' + val\n      },\n      county: function(key, val) {\n        return '&' + key + '=' + val\n      },\n      region: function(key, val) {\n        return '&' + key + '=' + val\n      },\n      postalcode: function(key, val) {\n        return '&' + key + '=' + val\n      },\n      country: function(key, val) {\n        return '&' + key + '=' + val\n      }\n    }\n  }\n\n  getParametersAsQueryString(args) {\n    let queryString = ''\n    for (const key in args) {\n      const val = args[key]\n      if (Constants.baseUrlConstituents.indexOf(key) <= -1) {\n        queryString += this.lookupParameter[key](key, val)\n      }\n    }\n    return queryString\n  }\n\n  async fetchGetRequest(controller) {\n    let url = orsUtil.prepareUrl(this.requestArgs)\n    // Add url query string from args\n    url += '?' + this.getParametersAsQueryString(this.requestArgs)\n\n    // createRequest function from base class is not applicable: GET instead of POST request\n    return await fetch(url, {\n      method: 'GET',\n      headers: this.customHeaders,\n      signal: controller.signal\n    })\n  }\n\n  async geocodePromise() {\n    const controller = new AbortController()\n    const timeout = setTimeout(() => controller.abort(), this.defaultArgs[Constants.propNames.timeout] || 5000)\n\n    try {\n      const orsResponse = await this.fetchGetRequest(controller)\n\n      if (!orsResponse.ok) {\n        const error = new Error(orsResponse.statusText)\n        error.status = orsResponse.status\n        error.response = orsResponse\n        throw error\n      }\n\n      return await orsResponse.json() || orsResponse.text()\n    } finally {\n      clearTimeout(timeout)\n    }\n  }\n\n  async geocode(reqArgs) {\n    this.requestArgs = reqArgs\n\n    this.checkHeaders()\n\n    if (!this.defaultArgs[Constants.propNames.service] && !this.requestArgs[Constants.propNames.service]) {\n      this.requestArgs.service = 'geocode/search'\n    }\n    this.requestArgs = orsUtil.fillArgs(this.defaultArgs, this.requestArgs)\n\n    return await this.geocodePromise()\n  }\n\n  async reverseGeocode(reqArgs) {\n    this.requestArgs = reqArgs\n\n    this.checkHeaders()\n\n    if (!this.defaultArgs[Constants.propNames.service] && !this.requestArgs[Constants.propNames.service]) {\n      this.requestArgs.service = 'geocode/reverse'\n    }\n    this.requestArgs = orsUtil.fillArgs(this.defaultArgs, this.requestArgs)\n\n    return await this.geocodePromise()\n  }\n\n  async structuredGeocode(reqArgs) {\n    this.requestArgs = reqArgs\n\n    this.checkHeaders()\n\n    if (!this.defaultArgs[Constants.propNames.service] && !this.requestArgs[Constants.propNames.service]) {\n      this.requestArgs.service = 'geocode/search/structured'\n    }\n    this.requestArgs = orsUtil.fillArgs(this.defaultArgs, this.requestArgs)\n\n    return await this.geocodePromise()\n  }\n}\n\nexport default OrsGeocode\n","import Constants from './constants.js'\nimport OrsBase from './OrsBase.js'\n\nclass OrsIsochrones extends OrsBase {\n  constructor(args) {\n    super(args);\n    if (!this.defaultArgs[Constants.propNames.service] && !this.requestArgs[Constants.propNames.service]) {\n      this.defaultArgs.service = 'isochrones'\n    }\n    if (!args[Constants.propNames.apiVersion]) {\n      this.defaultArgs.api_version = Constants.defaultAPIVersion\n    }\n  }\n\n  getBody(args) {\n    const options = {}\n\n    if (args.restrictions) {\n      options.profile_params = {\n        restrictions: {\n          ...args.restrictions\n        }\n      }\n      delete args.restrictions\n    }\n    if (args.avoidables) {\n      options.avoid_features = [...args.avoidables]\n      delete args.avoidables\n    }\n\n    if (args.avoid_polygons) {\n      options.avoid_polygons = {\n        ...args.avoid_polygons\n      }\n      delete args.avoid_polygons\n    }\n\n    if (Object.keys(options).length > 0) {\n      return {\n        ...args,\n        options: options\n      }\n    } else {\n      return {\n        ...args\n      }\n    }\n  }\n}\n\nexport default OrsIsochrones\n","import Constants from './constants.js'\nimport OrsBase from './OrsBase.js'\n\nclass OrsMatrix extends OrsBase {\n  constructor(args) {\n    super(args);\n    if (!this.defaultArgs[Constants.propNames.service] && !this.requestArgs[Constants.propNames.service]) {\n      this.defaultArgs[Constants.propNames.service] = 'matrix'\n    }\n    if (!args[Constants.propNames.apiVersion]) {\n      this.defaultArgs.api_version = Constants.defaultAPIVersion\n    }\n  }\n}\n\nexport default OrsMatrix\n","import Constants from './constants.js'\nimport OrsBase from './OrsBase.js'\n\nclass OrsDirections extends OrsBase {\n  constructor(args) {\n    super(args);\n    if (!this.defaultArgs[Constants.propNames.service]) {\n      this.defaultArgs[Constants.propNames.service] = 'directions'\n    }\n    if (!args[Constants.propNames.apiVersion]) {\n      this.defaultArgs.api_version = Constants.defaultAPIVersion\n    }\n  }\n\n  getBody(args) {\n    if (args.options && typeof args.options !== 'object') {\n      args.options = JSON.parse(args.options)\n    }\n\n    if (args.restrictions) {\n      args.options = args.options || {}\n      args.options.profile_params = {\n        restrictions: { ...args.restrictions }\n      }\n      delete args.restrictions\n    }\n\n    if (args.avoidables) {\n      args.options = args.options || {}\n      args.options.avoid_features = [...args.avoidables]\n      delete args.avoidables\n    }\n    return args\n  }\n}\n\nexport default OrsDirections\n","import OrsUtil from './OrsUtil.js'\nimport Constants from './constants.js'\nimport OrsBase from './OrsBase.js'\n\nconst orsUtil = new OrsUtil()\n\nclass OrsPois extends OrsBase {\n  constructor(args) {\n    super(args);\n    if (!this.defaultArgs[Constants.propNames.service]) {\n      this.defaultArgs[Constants.propNames.service] = 'pois'\n    }\n  }\n\n  generatePayload(args) {\n    const payload = {}\n\n    for (const key in args) {\n      if (\n          !(\n              Constants.baseUrlConstituents.indexOf(key) > -1 ||\n              key === Constants.propNames.apiKey ||\n              key === Constants.propNames.timeout\n          )\n      ) {\n        payload[key] = args[key]\n      }\n    }\n    return payload\n  }\n\n  async poisPromise() {\n    // the request arg is required by the API as part of the body\n    this.requestArgs.request = this.requestArgs.request || 'pois'\n\n    this.argsCache = orsUtil.saveArgsToCache(this.requestArgs)\n\n    if (this.requestArgs[Constants.propNames.service]) {\n      delete this.requestArgs[Constants.propNames.service]\n    }\n\n    const payload = this.generatePayload(this.requestArgs)\n\n    return await this.createRequest(payload)\n  }\n\n  async pois(reqArgs) {\n    this.requestArgs = reqArgs\n\n    this.checkHeaders()\n\n    this.requestArgs = orsUtil.fillArgs(this.defaultArgs, this.requestArgs)\n\n    return await this.poisPromise()\n  }\n}\n\nexport default OrsPois\n","import OrsUtil from './OrsUtil.js'\nimport Constants from './constants.js'\nimport OrsBase from './OrsBase.js'\n\nconst orsUtil = new OrsUtil()\nclass OrsElevation extends OrsBase {\n\n  generatePayload(args) {\n    const payload = {}\n\n    for (const key in args) {\n      if (Constants.baseUrlConstituents.indexOf(key) <= -1) {\n        payload[key] = args[key]\n      }\n    }\n    return payload\n  }\n\n  async elevationPromise() {\n    this.argsCache = orsUtil.saveArgsToCache(this.requestArgs)\n\n    const payload = this.generatePayload(this.requestArgs)\n\n    return await this.createRequest(payload)\n  }\n\n  async lineElevation(reqArgs) {\n    this.requestArgs = reqArgs\n\n    this.checkHeaders()\n\n    if (!this.defaultArgs[Constants.propNames.service] && !this.requestArgs[Constants.propNames.service]) {\n      this.requestArgs[Constants.propNames.service] = 'elevation/line'\n    }\n    this.requestArgs = orsUtil.fillArgs(this.defaultArgs, this.requestArgs)\n\n    return await this.elevationPromise()\n  }\n\n  async pointElevation(reqArgs) {\n    this.requestArgs = reqArgs\n\n    this.checkHeaders()\n\n    if (!this.defaultArgs[Constants.propNames.service] && !this.requestArgs[Constants.propNames.service]) {\n      this.requestArgs[Constants.propNames.service] = 'elevation/point'\n    }\n    this.requestArgs = orsUtil.fillArgs(this.defaultArgs, this.requestArgs)\n\n    return await this.elevationPromise()\n  }\n}\n\nexport default OrsElevation\n","import OrsUtil from \"./OrsUtil.js\"\nimport Constants from \"./constants.js\"\nimport OrsBase from \"./OrsBase.js\"\n\nconst orsUtil = new OrsUtil()\n\nclass OrsOptimization extends OrsBase {\n  generatePayload(args) {\n    let payload = {}\n\n    for (const key in args) {\n      if (Constants.baseUrlConstituents.indexOf(key) <= -1) {\n        payload[key] = args[key]\n      }\n    }\n    return payload\n  }\n\n  async optimizationPromise() {\n    this.argsCache = orsUtil.saveArgsToCache(this.requestArgs)\n\n    const payload = this.generatePayload(this.requestArgs)\n\n    return await this.createRequest(payload)\n  }\n\n  async optimize(reqArgs) {\n    this.requestArgs = reqArgs\n\n    this.checkHeaders()\n\n    if (!this.defaultArgs[Constants.propNames.service] && !reqArgs[Constants.propNames.service]) {\n      reqArgs[Constants.propNames.service] = 'optimization'\n    }\n    this.requestArgs = orsUtil.fillArgs(this.defaultArgs, this.requestArgs)\n\n    return await this.optimizationPromise()\n  }\n}\n\nexport default OrsOptimization\n","import Constants from './constants.js'\nimport OrsBase from './OrsBase.js'\n\nclass OrsSnap extends OrsBase {\n    constructor(args) {\n        super(args);\n        if (!this.defaultArgs[Constants.propNames.service] && !this.requestArgs[Constants.propNames.service]) {\n            this.defaultArgs[Constants.propNames.service] = 'snap'\n        }\n        if (!args[Constants.propNames.apiVersion]) {\n            this.defaultArgs.api_version = Constants.defaultAPIVersion\n        }\n    }\n}\n\nexport default OrsSnap\n","import OrsGeocode from './OrsGeocode.js'\nimport OrsIsochrones from './OrsIsochrones.js'\nimport OrsMatrix from './OrsMatrix.js'\nimport OrsDirections from './OrsDirections.js'\nimport OrsPois from './OrsPois.js'\nimport OrsElevation from './OrsElevation.js'\nimport OrsOptimization from './OrsOptimization.js'\nimport OrsSnap from './OrsSnap.js';\n\nconst Openrouteservice = {\n  Geocode: OrsGeocode,\n  Isochrones: OrsIsochrones,\n  Directions: OrsDirections,\n  Matrix: OrsMatrix,\n  Pois: OrsPois,\n  Elevation: OrsElevation,\n  Optimization: OrsOptimization,\n  Snap: OrsSnap\n}\n\n// Define Openrouteservice for Node module pattern loaders, including Browserify\nif (typeof module === 'object' && typeof module.exports === 'object') {\n  module.exports = Openrouteservice\n  // define Openrouteservice as an AMD module\n  // eslint-disable-next-line no-undef\n} else if (typeof define === 'function' && define.amd) {\n  // eslint-disable-next-line no-undef\n  define(Openrouteservice)\n}\n\nif (typeof window !== 'undefined') {\n  window.Openrouteservice = Openrouteservice\n}\n\nexport default Openrouteservice\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}